{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NoTokenExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmounts",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalPrice",
          "type": "uint256"
        }
      ],
      "name": "MintBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "URI_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "_paymentToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mitchToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_defaultPrice",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maxTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "mintBatchWithNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintWithNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mitchToken",
      "outputs": [
        {
          "internalType": "contract IMitchToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeMintEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "resetTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setDefaultPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setNativeTokenMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "newPaymentToken",
          "type": "address"
        }
      ],
      "name": "setPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniqueTokens",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405261016080546001600160601b03191690553480156200002257600080fd5b506200002d62000033565b620000f4565b600054610100900460ff1615620000a05760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000f2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b613e7d80620001046000396000f3fe60806040526004361061025b5760003560e01c80636b20c45411610144578063bd85b039116100b6578063e985e9c51161007a578063e985e9c5146107aa578063ea49b1cc146107f3578063eb685c471461081b578063f242432a1461083b578063f5298aca1461085b578063fc5abac11461087b57600080fd5b8063bd85b039146106da578063d4ddce8a14610708578063d539139314610736578063d547741f1461076a578063d81d0a151461078a57600080fd5b80638ca132f7116101085780638ca132f71461062f5780638d8f2adb1461064f5780638da5cb5b1461066457806391d1485414610685578063a217fddf146106a5578063a22cb465146106ba57600080fd5b80636b20c4541461056d5780636d3c7ec51461058d5780637f345710146105ad5780637ff7e616146105e15780638c7a63ae1461060157600080fd5b80633013ce29116101dd5780634e1273f4116101a15780634e1273f4146104b55780634f558e79146104e257806355f804b3146105125780635a18664c146105325780635a8f7b861461053a5780636a326ab11461054d57600080fd5b80633013ce29146103d057806330e8fd651461040e57806336568abe1461044757806336f5cba51461046757806337210b8f1461049557600080fd5b806315f8a01a1161022457806315f8a01a1461032d578063162094c414610340578063248a9ca3146103605780632eb2c2d6146103905780632f2ff15d146103b057600080fd5b8062fdd58e1461026057806301ffc9a7146102935780630b70ede5146102c35780630e89341c146102de578063156e29f61461030b575b600080fd5b34801561026c57600080fd5b5061028061027b366004612fdd565b61089b565b6040519081526020015b60405180910390f35b34801561029f57600080fd5b506102b36102ae36600461301f565b610936565b604051901515815260200161028a565b3480156102cf57600080fd5b5061015f546102b39060ff1681565b3480156102ea57600080fd5b506102fe6102f936600461303c565b610941565b60405161028a91906130a5565b34801561031757600080fd5b5061032b6103263660046130b8565b61094c565b005b61032b61033b3660046131c3565b6109ee565b34801561034c57600080fd5b5061032b61035b3660046132ab565b610a59565b34801561036c57600080fd5b5061028061037b36600461303c565b600090815260fb602052604090206001015490565b34801561039c57600080fd5b5061032b6103ab3660046132f1565b610a6e565b3480156103bc57600080fd5b5061032b6103cb36600461339e565b610aba565b3480156103dc57600080fd5b5061015f546103f69061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161028a565b34801561041a57600080fd5b506101605461042f906001600160601b031681565b6040516001600160601b03909116815260200161028a565b34801561045357600080fd5b5061032b61046236600461339e565b610adf565b34801561047357600080fd5b5061028061048236600461303c565b6101656020526000908152604090205481565b3480156104a157600080fd5b5061032b6104b03660046133dc565b610b5d565b3480156104c157600080fd5b506104d56104d03660046133f9565b610b7d565b60405161028a91906134f6565b3480156104ee57600080fd5b506102b36104fd36600461303c565b600090815261012d6020526040902054151590565b34801561051e57600080fd5b5061032b61052d366004613509565b610ca6565b61032b610cba565b61032b6105483660046130b8565b610d60565b34801561055957600080fd5b5061032b61056836600461353d565b610dfb565b34801561057957600080fd5b5061032b6105883660046131c3565b610e30565b34801561059957600080fd5b5061032b6105a836600461303c565b610e73565b3480156105b957600080fd5b506102807f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b3480156105ed57600080fd5b5061032b6105fc36600461355a565b610e85565b34801561060d57600080fd5b5061062161061c36600461303c565b611086565b60405161028a9291906135c3565b34801561063b57600080fd5b5061032b61064a3660046135dc565b6110cf565b34801561065b57600080fd5b5061032b611145565b34801561067057600080fd5b50610163546103f6906001600160a01b031681565b34801561069157600080fd5b506102b36106a036600461339e565b6111ef565b3480156106b157600080fd5b50610280600081565b3480156106c657600080fd5b5061032b6106d5366004613620565b61121a565b3480156106e657600080fd5b506102806106f536600461303c565b600090815261012d602052604090205490565b34801561071457600080fd5b5061028061072336600461303c565b6101646020526000908152604090205481565b34801561074257600080fd5b506102807f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561077657600080fd5b5061032b61078536600461339e565b611225565b34801561079657600080fd5b5061032b6107a53660046131c3565b61124a565b3480156107b657600080fd5b506102b36107c536600461364e565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b3480156107ff57600080fd5b50610160546103f690600160601b90046001600160a01b031681565b34801561082757600080fd5b5061032b61083636600461367c565b6112b7565b34801561084757600080fd5b5061032b61085636600461369e565b61131e565b34801561086757600080fd5b5061032b6108763660046130b8565b611363565b34801561088757600080fd5b5061032b61089636600461303c565b6113a6565b60006001600160a01b03831661090b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610930826113c4565b6060610930826113e9565b610160546001600160601b031682111561097c5760405163cfe3beb960e01b815260048101839052602401610902565b61015f5460ff16156109d05760405162461bcd60e51b815260206004820152601f60248201527f43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e006044820152606401610902565b61015f546109e99084908490849060009060ff166114c9565b505050565b61015f5460ff16610a415760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c79206d696e74207769746820657263323020746f6b656e00006044820152606401610902565b61015f546109e990849084908490349060ff16611748565b6000610a6481611b49565b6109e98383611b56565b6001600160a01b038516331480610a8a5750610a8a85336107c5565b610aa65760405162461bcd60e51b815260040161090290613706565b610ab38585858585611bb3565b5050505050565b600082815260fb6020526040902060010154610ad581611b49565b6109e98383611d60565b6001600160a01b0381163314610b4f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610902565b610b598282611de6565b5050565b6000610b6881611b49565b5061015f805460ff1916911515919091179055565b60608151835114610be25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610902565b600083516001600160401b03811115610bfd57610bfd6130ed565b604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50905060005b8451811015610c9e57610c71858281518110610c4a57610c4a613754565b6020026020010151858381518110610c6457610c64613754565b602002602001015161089b565b828281518110610c8357610c83613754565b6020908102919091010152610c9781613780565b9050610c2c565b509392505050565b6000610cb181611b49565b610b5982611e4d565b6000610cc581611b49565b610163546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610d13576040519150601f19603f3d011682016040523d82523d6000602084013e610d18565b606091505b5050905080610b595760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610902565b610160546001600160601b0316821115610d905760405163cfe3beb960e01b815260048101839052602401610902565b61015f5460ff16610de35760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c79206d696e74207769746820657263323020746f6b656e00006044820152606401610902565b61015f546109e990849084908490349060ff166114c9565b6000610e0681611b49565b5061015f80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b038316331480610e4c5750610e4c83336107c5565b610e685760405162461bcd60e51b815260040161090290613706565b6109e9838383611e59565b6000610e7e81611b49565b5061016255565b600054610100900460ff1615808015610ea55750600054600160ff909116105b80610ebf5750303b158015610ebf575060005460ff166001145b610f225760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610902565b6000805460ff191660011790558015610f45576000805461ff0019166101001790555b610f4e85611ffa565b610f5661202a565b610f5e61202a565b610f6661202a565b610161610f738682613819565b5061015f805461016284905561016080546001600160a01b03878116600160601b026001600160601b039092169190911790915560ff1990871661010002166001600160a81b031990911617600117905561016380546001600160a01b03191633908117909155610fe690600090611d60565b6110107f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c33611d60565b61103a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611d60565b8015610ab3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b60008181526101646020526040812054606090156110b657600083815261016460205260409020549150816110be565b610162549150815b506110c883610941565b9050915091565b60006110da81611b49565b61016080546001600160601b03169060006110f4836138d8565b82546101009290920a6001600160601b038181021990931691831602179091556101605461112492501684611b56565b50610160546001600160601b03166000908152610165602052604090205550565b600061115081611b49565b61015f546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c391906138fe565b90508015610b59576101635461015f54610b59916001600160a01b036101009092048216911683612053565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610b593383836120b6565b600082815260fb602052604090206001015461124081611b49565b6109e98383611de6565b61015f5460ff161561129e5760405162461bcd60e51b815260206004820152601f60248201527f43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e006044820152606401610902565b61015f546109e99084908490849060009060ff16611748565b60006112c281611b49565b8160000361130a5760405162461bcd60e51b8152602060048201526015602482015274063616e6e6f742073657420707269636520746f203605c1b6044820152606401610902565b506000918252610164602052604090912055565b6001600160a01b03851633148061133a575061133a85336107c5565b6113565760405162461bcd60e51b815260040161090290613706565b610ab38585858585612196565b6001600160a01b03831633148061137f575061137f83336107c5565b61139b5760405162461bcd60e51b815260040161090290613706565b6109e98383836122d2565b60006113b181611b49565b5060009081526101646020526040812055565b60006001600160e01b03198216637965db0b60e01b14806109305750610930826123ee565b600081815260ca602052604081208054606092919061140790613799565b80601f016020809104026020016040519081016040528092919081815260200182805461143390613799565b80156114805780601f1061145557610100808354040283529160200191611480565b820191906000526020600020905b81548152906001019060200180831161146357829003601f168201915b50505050509050600081511161149e576114998361243e565b6114c2565b60c9816040516020016114b2929190613917565b6040516020818303038152906040525b9392505050565b600084815261012d60205260408120548190600086116115205760405162461bcd60e51b81526020600482015260126024820152710416d6f756e742063616e6e6f7420626520360741b6044820152606401610902565b6000878152610165602052604090205461153a878361399e565b11156115835760405162461bcd60e51b815260206004820152601860248201527743616e6e6f7420657863656564204d617820537570706c7960401b6044820152606401610902565b610163546001600160a01b031633146116995760008781526101646020526040902054156115c357600087815261016460205260409020549150816115cb565b610162549150815b506115d682876124d2565b9250831561162957828510156116245760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610902565b611647565b61015f546116479061010090046001600160a01b03163330866124de565b604080516001600160a01b038a16815260208101899052908101879052606081018490527fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb9060800160405180910390a15b61016054600160601b90046001600160a01b03166340c10f19896116c589670de0b6b3a76400006124d2565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561170b57600080fd5b505af115801561171f573d6000803e3d6000fd5b5050505061173e88888860405180602001604052806000815250612516565b5050505050505050565b6101635460009081906001600160a01b03163314611a9b5760005b86518110156119e057600086828151811061178057611780613754565b6020026020010151116117ca5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e742063616e6e6f7420626520360741b6044820152606401610902565b6101605487516001600160601b03909116908890839081106117ee576117ee613754565b602002602001015111156118325786818151811061180e5761180e613754565b602002602001015160405163cfe3beb960e01b815260040161090291815260200190565b600061186488838151811061184957611849613754565b6020026020010151600090815261012d602052604090205490565b9050610165600089848151811061187d5761187d613754565b60200260200101518152602001908152602001600020548783815181106118a6576118a6613754565b6020026020010151826118b9919061399e565b11156119025760405162461bcd60e51b815260206004820152601860248201527743616e6e6f7420657863656564204d617820537570706c7960401b6044820152606401610902565b600061016460008a858151811061191b5761191b613754565b602002602001015181526020019081526020016000205460001461196f5761016460008a858151811061195057611950613754565b6020026020010151815260200190815260200160002054905080611976565b5061016254805b506119a388848151811061198c5761198c613754565b6020026020010151826124d290919063ffffffff16565b6119ad908661399e565b94508783815181106119c1576119c1613754565b6020026020010151846119d4919061399e565b93505050600101611763565b508215611a325781841015611a2d5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610902565b611a50565b61015f54611a509061010090046001600160a01b03163330856124de565b604080516001600160a01b0389168152602081018390529081018390527f6941bbed9891bfb7a243f6a1aa237a060996652ebf3e8f33bb36a0022e60dfbf9060600160405180910390a15b61016054600160601b90046001600160a01b03166340c10f1988611ac784670de0b6b3a76400006124d2565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611b0d57600080fd5b505af1158015611b21573d6000803e3d6000fd5b50505050611b40878787604051806020016040528060008152506125f8565b50505050505050565b611b538133612753565b50565b600082815260ca60205260409020611b6e8282613819565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b611b9a84610941565b604051611ba791906130a5565b60405180910390a25050565b8151835114611bd45760405162461bcd60e51b8152600401610902906139b1565b6001600160a01b038416611bfa5760405162461bcd60e51b8152600401610902906139f9565b33611c098187878787876127ac565b60005b8451811015611cf2576000858281518110611c2957611c29613754565b602002602001015190506000858381518110611c4757611c47613754565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015611c985760405162461bcd60e51b815260040161090290613a3e565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611cd790849061399e565b9250508190555050505080611ceb90613780565b9050611c0c565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611d42929190613a88565b60405180910390a4611d588187878787876127ba565b505050505050565b611d6a82826111ef565b610b5957600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611da23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611df082826111ef565b15610b5957600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60c9610b598282613819565b6001600160a01b038316611e7f5760405162461bcd60e51b815260040161090290613ab6565b8051825114611ea05760405162461bcd60e51b8152600401610902906139b1565b6000339050611ec3818560008686604051806020016040528060008152506127ac565b60005b8351811015611f8b576000848281518110611ee357611ee3613754565b602002602001015190506000848381518110611f0157611f01613754565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015611f525760405162461bcd60e51b815260040161090290613af9565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580611f8381613780565b915050611ec6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611fdc929190613a88565b60405180910390a46040805160208101909152600090525b50505050565b600054610100900460ff166120215760405162461bcd60e51b815260040161090290613b3d565b611b5381612915565b600054610100900460ff166120515760405162461bcd60e51b815260040161090290613b3d565b565b6040516001600160a01b0383166024820152604481018290526109e990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612945565b816001600160a01b0316836001600160a01b0316036121295760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610902565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166121bc5760405162461bcd60e51b8152600401610902906139f9565b3360006121c885612a17565b905060006121d585612a17565b90506121e58389898585896127ac565b60008681526065602090815260408083206001600160a01b038c168452909152902054858110156122285760405162461bcd60e51b815260040161090290613a3e565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061226790849061399e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46122c7848a8a8a8a8a612a62565b505050505050505050565b6001600160a01b0383166122f85760405162461bcd60e51b815260040161090290613ab6565b33600061230484612a17565b9050600061231184612a17565b9050612331838760008585604051806020016040528060008152506127ac565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156123745760405162461bcd60e51b815260040161090290613af9565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052611b40565b60006001600160e01b03198216636cdb3d1360e11b148061241f57506001600160e01b031982166303a24d0760e21b145b8061093057506301ffc9a760e01b6001600160e01b0319831614610930565b60606067805461244d90613799565b80601f016020809104026020016040519081016040528092919081815260200182805461247990613799565b80156124c65780601f1061249b576101008083540402835291602001916124c6565b820191906000526020600020905b8154815290600101906020018083116124a957829003601f168201915b50505050509050919050565b60006114c28284613b88565b6040516001600160a01b0380851660248301528316604482015260648101829052611ff49085906323b872dd60e01b9060840161207f565b6001600160a01b03841661253c5760405162461bcd60e51b815260040161090290613b9f565b33600061254885612a17565b9050600061255585612a17565b9050612566836000898585896127ac565b60008681526065602090815260408083206001600160a01b038b1684529091528120805487929061259890849061399e565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b4083600089898989612a62565b6001600160a01b03841661261e5760405162461bcd60e51b815260040161090290613b9f565b815183511461263f5760405162461bcd60e51b8152600401610902906139b1565b3361264f816000878787876127ac565b60005b84518110156126eb5783818151811061266d5761266d613754565b60200260200101516065600087848151811061268b5761268b613754565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546126d3919061399e565b909155508190506126e381613780565b915050612652565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161273c929190613a88565b60405180910390a4610ab3816000878787876127ba565b61275d82826111ef565b610b595761276a81612b1d565b612775836020612b2f565b604051602001612786929190613be0565b60408051601f198184030181529082905262461bcd60e51b8252610902916004016130a5565b611d58868686868686612cca565b6001600160a01b0384163b15611d585760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906127fe9089908990889088908890600401613c55565b6020604051808303816000875af1925050508015612839575060408051601f3d908101601f1916820190925261283691810190613cb3565b60015b6128e557612845613cd0565b806308c379a00361287e5750612859613cec565b806128645750612880565b8060405162461bcd60e51b815260040161090291906130a5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610902565b6001600160e01b0319811663bc197c8160e01b14611b405760405162461bcd60e51b815260040161090290613d75565b600054610100900460ff1661293c5760405162461bcd60e51b815260040161090290613b3d565b611b5381612e46565b600061299a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e529092919063ffffffff16565b8051909150156109e957808060200190518101906129b89190613dbd565b6109e95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610902565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612a5157612a51613754565b602090810291909101015292915050565b6001600160a01b0384163b15611d585760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190612aa69089908990889088908890600401613dda565b6020604051808303816000875af1925050508015612ae1575060408051601f3d908101601f19168201909252612ade91810190613cb3565b60015b612aed57612845613cd0565b6001600160e01b0319811663f23a6e6160e01b14611b405760405162461bcd60e51b815260040161090290613d75565b60606109306001600160a01b03831660145b60606000612b3e836002613b88565b612b4990600261399e565b6001600160401b03811115612b6057612b606130ed565b6040519080825280601f01601f191660200182016040528015612b8a576020820181803683370190505b509050600360fc1b81600081518110612ba557612ba5613754565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612bd457612bd4613754565b60200101906001600160f81b031916908160001a9053506000612bf8846002613b88565b612c0390600161399e565b90505b6001811115612c7b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c3757612c37613754565b1a60f81b828281518110612c4d57612c4d613754565b60200101906001600160f81b031916908160001a90535060049490941c93612c7481613e14565b9050612c06565b5083156114c25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610902565b6001600160a01b038516612d525760005b8351811015612d5057828181518110612cf657612cf6613754565b602002602001015161012d6000868481518110612d1557612d15613754565b602002602001015181526020019081526020016000206000828254612d3a919061399e565b90915550612d49905081613780565b9050612cdb565b505b6001600160a01b038416611d585760005b8351811015611b40576000848281518110612d8057612d80613754565b602002602001015190506000848381518110612d9e57612d9e613754565b60200260200101519050600061012d600084815260200190815260200160002054905081811015612e225760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610902565b600092835261012d602052604090922091039055612e3f81613780565b9050612d63565b6067610b598282613819565b6060612e618484600085612e69565b949350505050565b606082471015612eca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610902565b600080866001600160a01b03168587604051612ee69190613e2b565b60006040518083038185875af1925050503d8060008114612f23576040519150601f19603f3d011682016040523d82523d6000602084013e612f28565b606091505b5091509150612f3987838387612f44565b979650505050505050565b60608315612fb3578251600003612fac576001600160a01b0385163b612fac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610902565b5081612e61565b612e6183838151156128645781518083602001fd5b6001600160a01b0381168114611b5357600080fd5b60008060408385031215612ff057600080fd5b8235612ffb81612fc8565b946020939093013593505050565b6001600160e01b031981168114611b5357600080fd5b60006020828403121561303157600080fd5b81356114c281613009565b60006020828403121561304e57600080fd5b5035919050565b60005b83811015613070578181015183820152602001613058565b50506000910152565b60008151808452613091816020860160208601613055565b601f01601f19169290920160200192915050565b6020815260006114c26020830184613079565b6000806000606084860312156130cd57600080fd5b83356130d881612fc8565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613128576131286130ed565b6040525050565b60006001600160401b03821115613148576131486130ed565b5060051b60200190565b600082601f83011261316357600080fd5b813560206131708261312f565b60405161317d8282613103565b83815260059390931b850182019282810191508684111561319d57600080fd5b8286015b848110156131b857803583529183019183016131a1565b509695505050505050565b6000806000606084860312156131d857600080fd5b83356131e381612fc8565b925060208401356001600160401b03808211156131ff57600080fd5b61320b87838801613152565b9350604086013591508082111561322157600080fd5b5061322e86828701613152565b9150509250925092565b600082601f83011261324957600080fd5b81356001600160401b03811115613262576132626130ed565b604051613279601f8301601f191660200182613103565b81815284602083860101111561328e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156132be57600080fd5b8235915060208301356001600160401b038111156132db57600080fd5b6132e785828601613238565b9150509250929050565b600080600080600060a0868803121561330957600080fd5b853561331481612fc8565b9450602086013561332481612fc8565b935060408601356001600160401b038082111561334057600080fd5b61334c89838a01613152565b9450606088013591508082111561336257600080fd5b61336e89838a01613152565b9350608088013591508082111561338457600080fd5b5061339188828901613238565b9150509295509295909350565b600080604083850312156133b157600080fd5b8235915060208301356133c381612fc8565b809150509250929050565b8015158114611b5357600080fd5b6000602082840312156133ee57600080fd5b81356114c2816133ce565b6000806040838503121561340c57600080fd5b82356001600160401b038082111561342357600080fd5b818501915085601f83011261343757600080fd5b813560206134448261312f565b6040516134518282613103565b83815260059390931b850182019282810191508984111561347157600080fd5b948201945b8386101561349857853561348981612fc8565b82529482019490820190613476565b965050860135925050808211156134ae57600080fd5b506132e785828601613152565b600081518084526020808501945080840160005b838110156134eb578151875295820195908201906001016134cf565b509495945050505050565b6020815260006114c260208301846134bb565b60006020828403121561351b57600080fd5b81356001600160401b0381111561353157600080fd5b612e6184828501613238565b60006020828403121561354f57600080fd5b81356114c281612fc8565b6000806000806080858703121561357057600080fd5b84356001600160401b0381111561358657600080fd5b61359287828801613238565b94505060208501356135a381612fc8565b925060408501356135b381612fc8565b9396929550929360600135925050565b828152604060208201526000612e616040830184613079565b600080604083850312156135ef57600080fd5b82356001600160401b0381111561360557600080fd5b61361185828601613238565b95602094909401359450505050565b6000806040838503121561363357600080fd5b823561363e81612fc8565b915060208301356133c3816133ce565b6000806040838503121561366157600080fd5b823561366c81612fc8565b915060208301356133c381612fc8565b6000806040838503121561368f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156136b657600080fd5b85356136c181612fc8565b945060208601356136d181612fc8565b9350604086013592506060860135915060808601356001600160401b038111156136fa57600080fd5b61339188828901613238565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016137925761379261376a565b5060010190565b600181811c908216806137ad57607f821691505b6020821081036137cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109e957600081815260208120601f850160051c810160208610156137fa5750805b601f850160051c820191505b81811015611d5857828155600101613806565b81516001600160401b03811115613832576138326130ed565b613846816138408454613799565b846137d3565b602080601f83116001811461387b57600084156138635750858301515b600019600386901b1c1916600185901b178555611d58565b600085815260208120601f198616915b828110156138aa5788860151825594840194600190910190840161388b565b50858210156138c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160601b038083168181036138f4576138f461376a565b6001019392505050565b60006020828403121561391057600080fd5b5051919050565b600080845461392581613799565b6001828116801561393d576001811461395257613981565b60ff1984168752821515830287019450613981565b8860005260208060002060005b858110156139785781548a82015290840190820161395f565b50505082870194505b505050508351613995818360208801613055565b01949350505050565b808201808211156109305761093061376a565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000613a9b60408301856134bb565b8281036020840152613aad81856134bb565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820281158282048414176109305761093061376a565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613c18816017850160208801613055565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613c49816028840160208801613055565b01602801949350505050565b6001600160a01b0386811682528516602082015260a060408201819052600090613c81908301866134bb565b8281036060840152613c9381866134bb565b90508281036080840152613ca78185613079565b98975050505050505050565b600060208284031215613cc557600080fd5b81516114c281613009565b600060033d1115613ce95760046000803e5060005160e01c5b90565b600060443d1015613cfa5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715613d2957505050505090565b8285019150815181811115613d415750505050505090565b843d8701016020828501011115613d5b5750505050505090565b613d6a60208286010187613103565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b600060208284031215613dcf57600080fd5b81516114c2816133ce565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612f3990830184613079565b600081613e2357613e2361376a565b506000190190565b60008251613e3d818460208701613055565b919091019291505056fea2646970667358221220a692532013f509afe046e254566f187dcb91f52f2b28fd213eea6d9e83228b3764736f6c63430008110033",
    "sourceMap": "876:11030:0:-:0;;;1418:30;;;-1:-1:-1;;;;;;1418:30:0;;;1814:52;;;;;;;;;-1:-1:-1;1837:22:0;:20;:22::i;:::-;876:11030;;5939:280:20;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:20;;216:2:77;5998:66:20;;;198:21:77;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:77;;;338:37;392:19;;5998:66:20;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:20;6140:15;6125:30;;;;;;6174:28;;564:36:77;;;6174:28:20;;552:2:77;537:18;6174:28:20;;;;;;;6074:139;5939:280::o;422:184:77:-;876:11030:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061025b5760003560e01c80636b20c45411610144578063bd85b039116100b6578063e985e9c51161007a578063e985e9c5146107aa578063ea49b1cc146107f3578063eb685c471461081b578063f242432a1461083b578063f5298aca1461085b578063fc5abac11461087b57600080fd5b8063bd85b039146106da578063d4ddce8a14610708578063d539139314610736578063d547741f1461076a578063d81d0a151461078a57600080fd5b80638ca132f7116101085780638ca132f71461062f5780638d8f2adb1461064f5780638da5cb5b1461066457806391d1485414610685578063a217fddf146106a5578063a22cb465146106ba57600080fd5b80636b20c4541461056d5780636d3c7ec51461058d5780637f345710146105ad5780637ff7e616146105e15780638c7a63ae1461060157600080fd5b80633013ce29116101dd5780634e1273f4116101a15780634e1273f4146104b55780634f558e79146104e257806355f804b3146105125780635a18664c146105325780635a8f7b861461053a5780636a326ab11461054d57600080fd5b80633013ce29146103d057806330e8fd651461040e57806336568abe1461044757806336f5cba51461046757806337210b8f1461049557600080fd5b806315f8a01a1161022457806315f8a01a1461032d578063162094c414610340578063248a9ca3146103605780632eb2c2d6146103905780632f2ff15d146103b057600080fd5b8062fdd58e1461026057806301ffc9a7146102935780630b70ede5146102c35780630e89341c146102de578063156e29f61461030b575b600080fd5b34801561026c57600080fd5b5061028061027b366004612fdd565b61089b565b6040519081526020015b60405180910390f35b34801561029f57600080fd5b506102b36102ae36600461301f565b610936565b604051901515815260200161028a565b3480156102cf57600080fd5b5061015f546102b39060ff1681565b3480156102ea57600080fd5b506102fe6102f936600461303c565b610941565b60405161028a91906130a5565b34801561031757600080fd5b5061032b6103263660046130b8565b61094c565b005b61032b61033b3660046131c3565b6109ee565b34801561034c57600080fd5b5061032b61035b3660046132ab565b610a59565b34801561036c57600080fd5b5061028061037b36600461303c565b600090815260fb602052604090206001015490565b34801561039c57600080fd5b5061032b6103ab3660046132f1565b610a6e565b3480156103bc57600080fd5b5061032b6103cb36600461339e565b610aba565b3480156103dc57600080fd5b5061015f546103f69061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161028a565b34801561041a57600080fd5b506101605461042f906001600160601b031681565b6040516001600160601b03909116815260200161028a565b34801561045357600080fd5b5061032b61046236600461339e565b610adf565b34801561047357600080fd5b5061028061048236600461303c565b6101656020526000908152604090205481565b3480156104a157600080fd5b5061032b6104b03660046133dc565b610b5d565b3480156104c157600080fd5b506104d56104d03660046133f9565b610b7d565b60405161028a91906134f6565b3480156104ee57600080fd5b506102b36104fd36600461303c565b600090815261012d6020526040902054151590565b34801561051e57600080fd5b5061032b61052d366004613509565b610ca6565b61032b610cba565b61032b6105483660046130b8565b610d60565b34801561055957600080fd5b5061032b61056836600461353d565b610dfb565b34801561057957600080fd5b5061032b6105883660046131c3565b610e30565b34801561059957600080fd5b5061032b6105a836600461303c565b610e73565b3480156105b957600080fd5b506102807f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b3480156105ed57600080fd5b5061032b6105fc36600461355a565b610e85565b34801561060d57600080fd5b5061062161061c36600461303c565b611086565b60405161028a9291906135c3565b34801561063b57600080fd5b5061032b61064a3660046135dc565b6110cf565b34801561065b57600080fd5b5061032b611145565b34801561067057600080fd5b50610163546103f6906001600160a01b031681565b34801561069157600080fd5b506102b36106a036600461339e565b6111ef565b3480156106b157600080fd5b50610280600081565b3480156106c657600080fd5b5061032b6106d5366004613620565b61121a565b3480156106e657600080fd5b506102806106f536600461303c565b600090815261012d602052604090205490565b34801561071457600080fd5b5061028061072336600461303c565b6101646020526000908152604090205481565b34801561074257600080fd5b506102807f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561077657600080fd5b5061032b61078536600461339e565b611225565b34801561079657600080fd5b5061032b6107a53660046131c3565b61124a565b3480156107b657600080fd5b506102b36107c536600461364e565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b3480156107ff57600080fd5b50610160546103f690600160601b90046001600160a01b031681565b34801561082757600080fd5b5061032b61083636600461367c565b6112b7565b34801561084757600080fd5b5061032b61085636600461369e565b61131e565b34801561086757600080fd5b5061032b6108763660046130b8565b611363565b34801561088757600080fd5b5061032b61089636600461303c565b6113a6565b60006001600160a01b03831661090b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610930826113c4565b6060610930826113e9565b610160546001600160601b031682111561097c5760405163cfe3beb960e01b815260048101839052602401610902565b61015f5460ff16156109d05760405162461bcd60e51b815260206004820152601f60248201527f43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e006044820152606401610902565b61015f546109e99084908490849060009060ff166114c9565b505050565b61015f5460ff16610a415760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c79206d696e74207769746820657263323020746f6b656e00006044820152606401610902565b61015f546109e990849084908490349060ff16611748565b6000610a6481611b49565b6109e98383611b56565b6001600160a01b038516331480610a8a5750610a8a85336107c5565b610aa65760405162461bcd60e51b815260040161090290613706565b610ab38585858585611bb3565b5050505050565b600082815260fb6020526040902060010154610ad581611b49565b6109e98383611d60565b6001600160a01b0381163314610b4f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610902565b610b598282611de6565b5050565b6000610b6881611b49565b5061015f805460ff1916911515919091179055565b60608151835114610be25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610902565b600083516001600160401b03811115610bfd57610bfd6130ed565b604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50905060005b8451811015610c9e57610c71858281518110610c4a57610c4a613754565b6020026020010151858381518110610c6457610c64613754565b602002602001015161089b565b828281518110610c8357610c83613754565b6020908102919091010152610c9781613780565b9050610c2c565b509392505050565b6000610cb181611b49565b610b5982611e4d565b6000610cc581611b49565b610163546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610d13576040519150601f19603f3d011682016040523d82523d6000602084013e610d18565b606091505b5050905080610b595760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610902565b610160546001600160601b0316821115610d905760405163cfe3beb960e01b815260048101839052602401610902565b61015f5460ff16610de35760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c79206d696e74207769746820657263323020746f6b656e00006044820152606401610902565b61015f546109e990849084908490349060ff166114c9565b6000610e0681611b49565b5061015f80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b038316331480610e4c5750610e4c83336107c5565b610e685760405162461bcd60e51b815260040161090290613706565b6109e9838383611e59565b6000610e7e81611b49565b5061016255565b600054610100900460ff1615808015610ea55750600054600160ff909116105b80610ebf5750303b158015610ebf575060005460ff166001145b610f225760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610902565b6000805460ff191660011790558015610f45576000805461ff0019166101001790555b610f4e85611ffa565b610f5661202a565b610f5e61202a565b610f6661202a565b610161610f738682613819565b5061015f805461016284905561016080546001600160a01b03878116600160601b026001600160601b039092169190911790915560ff1990871661010002166001600160a81b031990911617600117905561016380546001600160a01b03191633908117909155610fe690600090611d60565b6110107f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c33611d60565b61103a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633611d60565b8015610ab3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b60008181526101646020526040812054606090156110b657600083815261016460205260409020549150816110be565b610162549150815b506110c883610941565b9050915091565b60006110da81611b49565b61016080546001600160601b03169060006110f4836138d8565b82546101009290920a6001600160601b038181021990931691831602179091556101605461112492501684611b56565b50610160546001600160601b03166000908152610165602052604090205550565b600061115081611b49565b61015f546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c391906138fe565b90508015610b59576101635461015f54610b59916001600160a01b036101009092048216911683612053565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610b593383836120b6565b600082815260fb602052604090206001015461124081611b49565b6109e98383611de6565b61015f5460ff161561129e5760405162461bcd60e51b815260206004820152601f60248201527f43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e006044820152606401610902565b61015f546109e99084908490849060009060ff16611748565b60006112c281611b49565b8160000361130a5760405162461bcd60e51b8152602060048201526015602482015274063616e6e6f742073657420707269636520746f203605c1b6044820152606401610902565b506000918252610164602052604090912055565b6001600160a01b03851633148061133a575061133a85336107c5565b6113565760405162461bcd60e51b815260040161090290613706565b610ab38585858585612196565b6001600160a01b03831633148061137f575061137f83336107c5565b61139b5760405162461bcd60e51b815260040161090290613706565b6109e98383836122d2565b60006113b181611b49565b5060009081526101646020526040812055565b60006001600160e01b03198216637965db0b60e01b14806109305750610930826123ee565b600081815260ca602052604081208054606092919061140790613799565b80601f016020809104026020016040519081016040528092919081815260200182805461143390613799565b80156114805780601f1061145557610100808354040283529160200191611480565b820191906000526020600020905b81548152906001019060200180831161146357829003601f168201915b50505050509050600081511161149e576114998361243e565b6114c2565b60c9816040516020016114b2929190613917565b6040516020818303038152906040525b9392505050565b600084815261012d60205260408120548190600086116115205760405162461bcd60e51b81526020600482015260126024820152710416d6f756e742063616e6e6f7420626520360741b6044820152606401610902565b6000878152610165602052604090205461153a878361399e565b11156115835760405162461bcd60e51b815260206004820152601860248201527743616e6e6f7420657863656564204d617820537570706c7960401b6044820152606401610902565b610163546001600160a01b031633146116995760008781526101646020526040902054156115c357600087815261016460205260409020549150816115cb565b610162549150815b506115d682876124d2565b9250831561162957828510156116245760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610902565b611647565b61015f546116479061010090046001600160a01b03163330866124de565b604080516001600160a01b038a16815260208101899052908101879052606081018490527fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb9060800160405180910390a15b61016054600160601b90046001600160a01b03166340c10f19896116c589670de0b6b3a76400006124d2565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561170b57600080fd5b505af115801561171f573d6000803e3d6000fd5b5050505061173e88888860405180602001604052806000815250612516565b5050505050505050565b6101635460009081906001600160a01b03163314611a9b5760005b86518110156119e057600086828151811061178057611780613754565b6020026020010151116117ca5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e742063616e6e6f7420626520360741b6044820152606401610902565b6101605487516001600160601b03909116908890839081106117ee576117ee613754565b602002602001015111156118325786818151811061180e5761180e613754565b602002602001015160405163cfe3beb960e01b815260040161090291815260200190565b600061186488838151811061184957611849613754565b6020026020010151600090815261012d602052604090205490565b9050610165600089848151811061187d5761187d613754565b60200260200101518152602001908152602001600020548783815181106118a6576118a6613754565b6020026020010151826118b9919061399e565b11156119025760405162461bcd60e51b815260206004820152601860248201527743616e6e6f7420657863656564204d617820537570706c7960401b6044820152606401610902565b600061016460008a858151811061191b5761191b613754565b602002602001015181526020019081526020016000205460001461196f5761016460008a858151811061195057611950613754565b6020026020010151815260200190815260200160002054905080611976565b5061016254805b506119a388848151811061198c5761198c613754565b6020026020010151826124d290919063ffffffff16565b6119ad908661399e565b94508783815181106119c1576119c1613754565b6020026020010151846119d4919061399e565b93505050600101611763565b508215611a325781841015611a2d5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610902565b611a50565b61015f54611a509061010090046001600160a01b03163330856124de565b604080516001600160a01b0389168152602081018390529081018390527f6941bbed9891bfb7a243f6a1aa237a060996652ebf3e8f33bb36a0022e60dfbf9060600160405180910390a15b61016054600160601b90046001600160a01b03166340c10f1988611ac784670de0b6b3a76400006124d2565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611b0d57600080fd5b505af1158015611b21573d6000803e3d6000fd5b50505050611b40878787604051806020016040528060008152506125f8565b50505050505050565b611b538133612753565b50565b600082815260ca60205260409020611b6e8282613819565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b611b9a84610941565b604051611ba791906130a5565b60405180910390a25050565b8151835114611bd45760405162461bcd60e51b8152600401610902906139b1565b6001600160a01b038416611bfa5760405162461bcd60e51b8152600401610902906139f9565b33611c098187878787876127ac565b60005b8451811015611cf2576000858281518110611c2957611c29613754565b602002602001015190506000858381518110611c4757611c47613754565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015611c985760405162461bcd60e51b815260040161090290613a3e565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611cd790849061399e565b9250508190555050505080611ceb90613780565b9050611c0c565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611d42929190613a88565b60405180910390a4611d588187878787876127ba565b505050505050565b611d6a82826111ef565b610b5957600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611da23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611df082826111ef565b15610b5957600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60c9610b598282613819565b6001600160a01b038316611e7f5760405162461bcd60e51b815260040161090290613ab6565b8051825114611ea05760405162461bcd60e51b8152600401610902906139b1565b6000339050611ec3818560008686604051806020016040528060008152506127ac565b60005b8351811015611f8b576000848281518110611ee357611ee3613754565b602002602001015190506000848381518110611f0157611f01613754565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015611f525760405162461bcd60e51b815260040161090290613af9565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580611f8381613780565b915050611ec6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611fdc929190613a88565b60405180910390a46040805160208101909152600090525b50505050565b600054610100900460ff166120215760405162461bcd60e51b815260040161090290613b3d565b611b5381612915565b600054610100900460ff166120515760405162461bcd60e51b815260040161090290613b3d565b565b6040516001600160a01b0383166024820152604481018290526109e990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612945565b816001600160a01b0316836001600160a01b0316036121295760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610902565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166121bc5760405162461bcd60e51b8152600401610902906139f9565b3360006121c885612a17565b905060006121d585612a17565b90506121e58389898585896127ac565b60008681526065602090815260408083206001600160a01b038c168452909152902054858110156122285760405162461bcd60e51b815260040161090290613a3e565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061226790849061399e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46122c7848a8a8a8a8a612a62565b505050505050505050565b6001600160a01b0383166122f85760405162461bcd60e51b815260040161090290613ab6565b33600061230484612a17565b9050600061231184612a17565b9050612331838760008585604051806020016040528060008152506127ac565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156123745760405162461bcd60e51b815260040161090290613af9565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052611b40565b60006001600160e01b03198216636cdb3d1360e11b148061241f57506001600160e01b031982166303a24d0760e21b145b8061093057506301ffc9a760e01b6001600160e01b0319831614610930565b60606067805461244d90613799565b80601f016020809104026020016040519081016040528092919081815260200182805461247990613799565b80156124c65780601f1061249b576101008083540402835291602001916124c6565b820191906000526020600020905b8154815290600101906020018083116124a957829003601f168201915b50505050509050919050565b60006114c28284613b88565b6040516001600160a01b0380851660248301528316604482015260648101829052611ff49085906323b872dd60e01b9060840161207f565b6001600160a01b03841661253c5760405162461bcd60e51b815260040161090290613b9f565b33600061254885612a17565b9050600061255585612a17565b9050612566836000898585896127ac565b60008681526065602090815260408083206001600160a01b038b1684529091528120805487929061259890849061399e565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b4083600089898989612a62565b6001600160a01b03841661261e5760405162461bcd60e51b815260040161090290613b9f565b815183511461263f5760405162461bcd60e51b8152600401610902906139b1565b3361264f816000878787876127ac565b60005b84518110156126eb5783818151811061266d5761266d613754565b60200260200101516065600087848151811061268b5761268b613754565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546126d3919061399e565b909155508190506126e381613780565b915050612652565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161273c929190613a88565b60405180910390a4610ab3816000878787876127ba565b61275d82826111ef565b610b595761276a81612b1d565b612775836020612b2f565b604051602001612786929190613be0565b60408051601f198184030181529082905262461bcd60e51b8252610902916004016130a5565b611d58868686868686612cca565b6001600160a01b0384163b15611d585760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906127fe9089908990889088908890600401613c55565b6020604051808303816000875af1925050508015612839575060408051601f3d908101601f1916820190925261283691810190613cb3565b60015b6128e557612845613cd0565b806308c379a00361287e5750612859613cec565b806128645750612880565b8060405162461bcd60e51b815260040161090291906130a5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610902565b6001600160e01b0319811663bc197c8160e01b14611b405760405162461bcd60e51b815260040161090290613d75565b600054610100900460ff1661293c5760405162461bcd60e51b815260040161090290613b3d565b611b5381612e46565b600061299a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e529092919063ffffffff16565b8051909150156109e957808060200190518101906129b89190613dbd565b6109e95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610902565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612a5157612a51613754565b602090810291909101015292915050565b6001600160a01b0384163b15611d585760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190612aa69089908990889088908890600401613dda565b6020604051808303816000875af1925050508015612ae1575060408051601f3d908101601f19168201909252612ade91810190613cb3565b60015b612aed57612845613cd0565b6001600160e01b0319811663f23a6e6160e01b14611b405760405162461bcd60e51b815260040161090290613d75565b60606109306001600160a01b03831660145b60606000612b3e836002613b88565b612b4990600261399e565b6001600160401b03811115612b6057612b606130ed565b6040519080825280601f01601f191660200182016040528015612b8a576020820181803683370190505b509050600360fc1b81600081518110612ba557612ba5613754565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612bd457612bd4613754565b60200101906001600160f81b031916908160001a9053506000612bf8846002613b88565b612c0390600161399e565b90505b6001811115612c7b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c3757612c37613754565b1a60f81b828281518110612c4d57612c4d613754565b60200101906001600160f81b031916908160001a90535060049490941c93612c7481613e14565b9050612c06565b5083156114c25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610902565b6001600160a01b038516612d525760005b8351811015612d5057828181518110612cf657612cf6613754565b602002602001015161012d6000868481518110612d1557612d15613754565b602002602001015181526020019081526020016000206000828254612d3a919061399e565b90915550612d49905081613780565b9050612cdb565b505b6001600160a01b038416611d585760005b8351811015611b40576000848281518110612d8057612d80613754565b602002602001015190506000848381518110612d9e57612d9e613754565b60200260200101519050600061012d600084815260200190815260200160002054905081811015612e225760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610902565b600092835261012d602052604090922091039055612e3f81613780565b9050612d63565b6067610b598282613819565b6060612e618484600085612e69565b949350505050565b606082471015612eca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610902565b600080866001600160a01b03168587604051612ee69190613e2b565b60006040518083038185875af1925050503d8060008114612f23576040519150601f19603f3d011682016040523d82523d6000602084013e612f28565b606091505b5091509150612f3987838387612f44565b979650505050505050565b60608315612fb3578251600003612fac576001600160a01b0385163b612fac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610902565b5081612e61565b612e6183838151156128645781518083602001fd5b6001600160a01b0381168114611b5357600080fd5b60008060408385031215612ff057600080fd5b8235612ffb81612fc8565b946020939093013593505050565b6001600160e01b031981168114611b5357600080fd5b60006020828403121561303157600080fd5b81356114c281613009565b60006020828403121561304e57600080fd5b5035919050565b60005b83811015613070578181015183820152602001613058565b50506000910152565b60008151808452613091816020860160208601613055565b601f01601f19169290920160200192915050565b6020815260006114c26020830184613079565b6000806000606084860312156130cd57600080fd5b83356130d881612fc8565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613128576131286130ed565b6040525050565b60006001600160401b03821115613148576131486130ed565b5060051b60200190565b600082601f83011261316357600080fd5b813560206131708261312f565b60405161317d8282613103565b83815260059390931b850182019282810191508684111561319d57600080fd5b8286015b848110156131b857803583529183019183016131a1565b509695505050505050565b6000806000606084860312156131d857600080fd5b83356131e381612fc8565b925060208401356001600160401b03808211156131ff57600080fd5b61320b87838801613152565b9350604086013591508082111561322157600080fd5b5061322e86828701613152565b9150509250925092565b600082601f83011261324957600080fd5b81356001600160401b03811115613262576132626130ed565b604051613279601f8301601f191660200182613103565b81815284602083860101111561328e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156132be57600080fd5b8235915060208301356001600160401b038111156132db57600080fd5b6132e785828601613238565b9150509250929050565b600080600080600060a0868803121561330957600080fd5b853561331481612fc8565b9450602086013561332481612fc8565b935060408601356001600160401b038082111561334057600080fd5b61334c89838a01613152565b9450606088013591508082111561336257600080fd5b61336e89838a01613152565b9350608088013591508082111561338457600080fd5b5061339188828901613238565b9150509295509295909350565b600080604083850312156133b157600080fd5b8235915060208301356133c381612fc8565b809150509250929050565b8015158114611b5357600080fd5b6000602082840312156133ee57600080fd5b81356114c2816133ce565b6000806040838503121561340c57600080fd5b82356001600160401b038082111561342357600080fd5b818501915085601f83011261343757600080fd5b813560206134448261312f565b6040516134518282613103565b83815260059390931b850182019282810191508984111561347157600080fd5b948201945b8386101561349857853561348981612fc8565b82529482019490820190613476565b965050860135925050808211156134ae57600080fd5b506132e785828601613152565b600081518084526020808501945080840160005b838110156134eb578151875295820195908201906001016134cf565b509495945050505050565b6020815260006114c260208301846134bb565b60006020828403121561351b57600080fd5b81356001600160401b0381111561353157600080fd5b612e6184828501613238565b60006020828403121561354f57600080fd5b81356114c281612fc8565b6000806000806080858703121561357057600080fd5b84356001600160401b0381111561358657600080fd5b61359287828801613238565b94505060208501356135a381612fc8565b925060408501356135b381612fc8565b9396929550929360600135925050565b828152604060208201526000612e616040830184613079565b600080604083850312156135ef57600080fd5b82356001600160401b0381111561360557600080fd5b61361185828601613238565b95602094909401359450505050565b6000806040838503121561363357600080fd5b823561363e81612fc8565b915060208301356133c3816133ce565b6000806040838503121561366157600080fd5b823561366c81612fc8565b915060208301356133c381612fc8565b6000806040838503121561368f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156136b657600080fd5b85356136c181612fc8565b945060208601356136d181612fc8565b9350604086013592506060860135915060808601356001600160401b038111156136fa57600080fd5b61339188828901613238565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016137925761379261376a565b5060010190565b600181811c908216806137ad57607f821691505b6020821081036137cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109e957600081815260208120601f850160051c810160208610156137fa5750805b601f850160051c820191505b81811015611d5857828155600101613806565b81516001600160401b03811115613832576138326130ed565b613846816138408454613799565b846137d3565b602080601f83116001811461387b57600084156138635750858301515b600019600386901b1c1916600185901b178555611d58565b600085815260208120601f198616915b828110156138aa5788860151825594840194600190910190840161388b565b50858210156138c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160601b038083168181036138f4576138f461376a565b6001019392505050565b60006020828403121561391057600080fd5b5051919050565b600080845461392581613799565b6001828116801561393d576001811461395257613981565b60ff1984168752821515830287019450613981565b8860005260208060002060005b858110156139785781548a82015290840190820161395f565b50505082870194505b505050508351613995818360208801613055565b01949350505050565b808201808211156109305761093061376a565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000613a9b60408301856134bb565b8281036020840152613aad81856134bb565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820281158282048414176109305761093061376a565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613c18816017850160208801613055565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613c49816028840160208801613055565b01602801949350505050565b6001600160a01b0386811682528516602082015260a060408201819052600090613c81908301866134bb565b8281036060840152613c9381866134bb565b90508281036080840152613ca78185613079565b98975050505050505050565b600060208284031215613cc557600080fd5b81516114c281613009565b600060033d1115613ce95760046000803e5060005160e01c5b90565b600060443d1015613cfa5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715613d2957505050505090565b8285019150815181811115613d415750505050505090565b843d8701016020828501011115613d5b5750505050505090565b613d6a60208286010187613103565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b600060208284031215613dcf57600080fd5b81516114c2816133ce565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612f3990830184613079565b600081613e2357613e2361376a565b506000190190565b60008251613e3d818460208701613055565b919091019291505056fea2646970667358221220a692532013f509afe046e254566f187dcb91f52f2b28fd213eea6d9e83228b3764736f6c63430008110033",
    "sourceMap": "876:11030:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:21;;;;;;;;;;-1:-1:-1;2593:227:21;;;;;:::i;:::-;;:::i;:::-;;;616:25:77;;;604:2;589:18;2593:227:21;;;;;;;;11714:189:0;;;;;;;;;;-1:-1:-1;11714:189:0;;;;;:::i;:::-;;:::i;:::-;;;1203:14:77;;1196:22;1178:41;;1166:2;1151:18;11714:189:0;1038:187:77;1351:29:0;;;;;;;;;;-1:-1:-1;1351:29:0;;;;;;;;7420:175;;;;;;;;;;-1:-1:-1;7420:175:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4098:282::-;;;;;;;;;;-1:-1:-1;4098:282:0;;;;;:::i;:::-;;:::i;:::-;;7045:269;;;;;;:::i;:::-;;:::i;9112:143::-;;;;;;;;;;-1:-1:-1;9112:143:0;;;;;:::i;:::-;;:::i;4834:129:18:-;;;;;;;;;;-1:-1:-1;4834:129:18;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;4450:426:21;;;;;;;;;;-1:-1:-1;4450:426:21;;;;;:::i;:::-;;:::i;5259:145:18:-;;;;;;;;;;-1:-1:-1;5259:145:18;;;;;:::i;:::-;;:::i;1386:26:0:-;;;;;;;;;;-1:-1:-1;1386:26:0;;;;;;;-1:-1:-1;;;;;1386:26:0;;;;;;-1:-1:-1;;;;;7497:32:77;;;7479:51;;7467:2;7452:18;1386:26:0;7317:219:77;1418:30:0;;;;;;;;;;-1:-1:-1;1418:30:0;;;;-1:-1:-1;;;;;1418:30:0;;;;;;-1:-1:-1;;;;;7703:39:77;;;7685:58;;7673:2;7658:18;1418:30:0;7541:208:77;6368:214:18;;;;;;;;;;-1:-1:-1;6368:214:18;;;;;:::i;:::-;;:::i;1758:49:0:-;;;;;;;;;;-1:-1:-1;1758:49:0;;;;;:::i;:::-;;;;;;;;;;;;;;10570:127;;;;;;;;;;-1:-1:-1;10570:127:0;;;;;:::i;:::-;;:::i;2977:486:21:-;;;;;;;;;;-1:-1:-1;2977:486:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1149:131:25:-;;;;;;;;;;-1:-1:-1;1149:131:25;;;;;:::i;:::-;1206:4;1033:16;;;:12;:16;;;;;;-1:-1:-1;;;1149:131:25;9410:120:0;;;;;;;;;;-1:-1:-1;9410:120:0;;;;;:::i;:::-;;:::i;10833:209::-;;;:::i;4589:311::-;;;;;;:::i;:::-;;:::i;8784:134::-;;;;;;;;;;-1:-1:-1;8784:134:0;;;;;:::i;:::-;;:::i;951:317:24:-;;;;;;;;;;-1:-1:-1;951:317:24;;;;;:::i;:::-;;:::i;8150:115:0:-;;;;;;;;;;-1:-1:-1;8150:115:0;;;;;:::i;:::-;;:::i;1562:70::-;;;;;;;;;;;;1604:28;1562:70;;2364:638;;;;;;;;;;-1:-1:-1;2364:638:0;;;;;:::i;:::-;;:::i;11133:228::-;;;;;;;;;;-1:-1:-1;11133:228:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9708:256::-;;;;;;;;;;-1:-1:-1;9708:256:0;;;;;:::i;:::-;;:::i;10093:243::-;;;;;;;;;;;;;:::i;1535:20::-;;;;;;;;;;-1:-1:-1;1535:20:0;;;;-1:-1:-1;;;;;1535:20:0;;;3329:145:18;;;;;;;;;;-1:-1:-1;3329:145:18;;;;;:::i;:::-;;:::i;2450:49::-;;;;;;;;;;-1:-1:-1;2450:49:18;2495:4;2450:49;;3531:153:21;;;;;;;;;;-1:-1:-1;3531:153:21;;;;;:::i;:::-;;:::i;945:111:25:-;;;;;;;;;;-1:-1:-1;945:111:25;;;;;:::i;:::-;1007:7;1033:16;;;:12;:16;;;;;;;945:111;1707:45:0;;;;;;;;;;-1:-1:-1;1707:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;1638:62;;;;;;;;;;;;1676:24;1638:62;;5684:147:18;;;;;;;;;;-1:-1:-1;5684:147:18;;;;;:::i;:::-;;:::i;6458:233:0:-;;;;;;;;;;-1:-1:-1;6458:233:0;;;;;:::i;:::-;;:::i;3751:166:21:-;;;;;;;;;;-1:-1:-1;3751:166:21;;;;;:::i;:::-;-1:-1:-1;;;;;3873:27:21;;;3850:4;3873:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3751:166;1454:29:0;;;;;;;;;;-1:-1:-1;1454:29:0;;;;-1:-1:-1;;;1454:29:0;;-1:-1:-1;;;;;1454:29:0;;;7797:191;;;;;;;;;;-1:-1:-1;7797:191:0;;;;;:::i;:::-;;:::i;3984:394:21:-;;;;;;;;;;-1:-1:-1;3984:394:21;;;;;:::i;:::-;;:::i;660:285:24:-;;;;;;;;;;-1:-1:-1;660:285:24;;;;;:::i;:::-;;:::i;8457:120:0:-;;;;;;;;;;-1:-1:-1;8457:120:0;;;;;:::i;:::-;;:::i;2593:227:21:-;2679:7;-1:-1:-1;;;;;2706:21:21;;2698:76;;;;-1:-1:-1;;;2698:76:21;;14494:2:77;2698:76:21;;;14476:21:77;14533:2;14513:18;;;14506:30;14572:34;14552:18;;;14545:62;-1:-1:-1;;;14623:18:77;;;14616:40;14673:19;;2698:76:21;;;;;;;;;-1:-1:-1;2791:13:21;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:21;;;;;;;;;;2593:227;;;;;:::o;11714:189:0:-;11845:4;11864:36;11888:11;11864:23;:36::i;7420:175::-;7538:13;7570:18;7580:7;7570:9;:18::i;4098:282::-;4180:12;;-1:-1:-1;;;;;4180:12:0;4175:17;;4171:72;;;4215:17;;-1:-1:-1;;;4215:17:0;;;;;616:25:77;;;589:18;;4215:17:0;470:177:77;4171:72:0;4261:17;;;;4260:18;4252:62;;;;-1:-1:-1;;;4252:62:0;;14905:2:77;4252:62:0;;;14887:21:77;14944:2;14924:18;;;14917:30;14983:33;14963:18;;;14956:61;15034:18;;4252:62:0;14703:355:77;4252:62:0;4355:17;;4324:49;;4336:2;;4340;;4344:6;;4352:1;;4355:17;;4324:11;:49::i;:::-;4098:282;;;:::o;7045:269::-;7174:17;;;;7166:60;;;;-1:-1:-1;;;7166:60:0;;15265:2:77;7166:60:0;;;15247:21:77;15304:2;15284:18;;;15277:30;15343:32;15323:18;;;15316:60;15393:18;;7166:60:0;15063:354:77;7166:60:0;7289:17;;7243:64;;7260:2;;7264:3;;7269:7;;7278:9;;7289:17;;7243:16;:64::i;9112:143::-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;9222:26:0::1;9230:7;9239:8;9222:7;:26::i;4450:426:21:-:0;-1:-1:-1;;;;;4675:20:21;;929:10:29;4675:20:21;;:60;;-1:-1:-1;4699:36:21;4716:4;929:10:29;3751:166:21;:::i;4699:36::-;4654:153;;;;-1:-1:-1;;;4654:153:21;;;;;;;:::i;:::-;4817:52;4840:4;4846:2;4850:3;4855:7;4864:4;4817:22;:52::i;:::-;4450:426;;;;;:::o;5259:145:18:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;6368:214::-:0;-1:-1:-1;;;;;6463:23:18;;929:10:29;6463:23:18;6455:83;;;;-1:-1:-1;;;6455:83:18;;16039:2:77;6455:83:18;;;16021:21:77;16078:2;16058:18;;;16051:30;16117:34;16097:18;;;16090:62;-1:-1:-1;;;16168:18:77;;;16161:45;16223:19;;6455:83:18;15837:411:77;6455:83:18;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;10570:127:0:-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;10663:17:0::1;:27:::0;;-1:-1:-1;;10663:27:0::1;::::0;::::1;;::::0;;;::::1;::::0;;10570:127::o;2977:486:21:-;3110:16;3165:3;:10;3146:8;:15;:29;3138:83;;;;-1:-1:-1;;;3138:83:21;;16455:2:77;3138:83:21;;;16437:21:77;16494:2;16474:18;;;16467:30;16533:34;16513:18;;;16506:62;-1:-1:-1;;;16584:18:77;;;16577:39;16633:19;;3138:83:21;16253:405:77;3138:83:21;3232:30;3279:8;:15;-1:-1:-1;;;;;3265:30:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3265:30:21;;3232:63;;3311:9;3306:120;3330:8;:15;3326:1;:19;3306:120;;;3385:30;3395:8;3404:1;3395:11;;;;;;;;:::i;:::-;;;;;;;3408:3;3412:1;3408:6;;;;;;;;:::i;:::-;;;;;;;3385:9;:30::i;:::-;3366:13;3380:1;3366:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3347:3;;;:::i;:::-;;;3306:120;;;-1:-1:-1;3443:13:21;2977:486;-1:-1:-1;;;2977:486:21:o;9410:120:0:-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;9502:21:0::1;9514:8;9502:11;:21::i;10833:209::-:0;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;10943:5:0::1;::::0;10935:53:::1;::::0;10921:9:::1;::::0;-1:-1:-1;;;;;10943:5:0::1;::::0;10962:21:::1;::::0;10921:9;10935:53;10921:9;10935:53;10962:21;10943:5;10935:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10920:68;;;11006:4;10998:37;;;::::0;-1:-1:-1;;;10998:37:0;;17479:2:77;10998:37:0::1;::::0;::::1;17461:21:77::0;17518:2;17498:18;;;17491:30;-1:-1:-1;;;17537:18:77;;;17530:50;17597:18;;10998:37:0::1;17277:344:77::0;4589:311:0;4694:12;;-1:-1:-1;;;;;4694:12:0;4689:17;;4685:72;;;4729:17;;-1:-1:-1;;;4729:17:0;;;;;616:25:77;;;589:18;;4729:17:0;470:177:77;4685:72:0;4774:17;;;;4766:60;;;;-1:-1:-1;;;4766:60:0;;15265:2:77;4766:60:0;;;15247:21:77;15304:2;15284:18;;;15277:30;15343:32;15323:18;;;15316:60;15393:18;;4766:60:0;15063:354:77;4766:60:0;4875:17;;4836:57;;4848:2;;4852;;4856:6;;4864:9;;4875:17;;4836:11;:57::i;8784:134::-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;8881:12:0::1;:30:::0;;-1:-1:-1;;;;;8881:30:0;;::::1;;;-1:-1:-1::0;;;;;;8881:30:0;;::::1;::::0;;;::::1;::::0;;8784:134::o;951:317:24:-;-1:-1:-1;;;;;1080:23:24;;929:10:29;1080:23:24;;:66;;-1:-1:-1;1107:39:24;1124:7;929:10:29;3751:166:21;:::i;1107:39:24:-;1059:159;;;;-1:-1:-1;;;1059:159:24;;;;;;;:::i;:::-;1229:32;1240:7;1249:3;1254:6;1229:10;:32::i;8150:115:0:-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;8238:12:0::1;:20:::0;8150:115::o;2364:638::-;3279:19:20;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:20;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:20;1713:19:28;:23;;;3387:66:20;;-1:-1:-1;3436:12:20;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:20;;17828:2:77;3325:201:20;;;17810:21:77;17867:2;17847:18;;;17840:30;17906:34;17886:18;;;17879:62;-1:-1:-1;;;17957:18:77;;;17950:44;18011:19;;3325:201:20;17626:410:77;3325:201:20;3536:12;:16;;-1:-1:-1;;3536:16:20;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:20;;;;;3562:65;2503:24:0::1;2518:8;2503:14;:24::i;:::-;2537:22;:20;:22::i;:::-;2569:24;:22;:24::i;:::-;2603:22;:20;:22::i;:::-;2636:7;:18;2646:8:::0;2636:7;:18:::1;:::i;:::-;-1:-1:-1::0;2664:12:0::1;:28:::0;;2702:12:::1;:28:::0;;;2740:10:::1;:37:::0;;-1:-1:-1;;;;;2740:37:0;;::::1;-1:-1:-1::0;;;2740:37:0::1;-1:-1:-1::0;;;;;2740:37:0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;2664:28:0;;::::1;;;2787:24:::0;-1:-1:-1;;;;;;2787:24:0;;;;2664:12:::1;2787:24;::::0;;2821:5:::1;:18:::0;;-1:-1:-1;;;;;;2821:18:0::1;2829:10;2821:18:::0;;::::1;::::0;;;2859:42:::1;::::0;-1:-1:-1;;2859:10:0::1;:42::i;:::-;2911:39;1604:28;2939:10;2911;:39::i;:::-;2960:35;1676:24;2984:10;2960;:35::i;:::-;3651:14:20::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:20;;;3721:14;;-1:-1:-1;20782:36:77;;3721:14:20;;20770:2:77;20755:18;3721:14:20;;;;;;;3269:483;2364:638:0;;;;:::o;11133:228::-;11195:13;11244:19;;;:10;:19;;;;;;11210:22;;11244:24;:77;;11302:19;;;;:10;:19;;;;;;;-1:-1:-1;11302:19:0;11244:77;;;11279:12;;11271:20;;;11244:77;;11342:12;11346:7;11342:3;:12::i;:::-;11331:23;;11133:228;;;:::o;9708:256::-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;9817:12:0::1;:14:::0;;-1:-1:-1;;;;;9817:14:0::1;::::0;:12:::1;:14;::::0;::::1;:::i;:::-;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;9817:14:0;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;9849:12:::1;::::0;9841:31:::1;::::0;-1:-1:-1;9849:12:0::1;9863:8:::0;9841:7:::1;:31::i;:::-;-1:-1:-1::0;9900:12:0::1;::::0;-1:-1:-1;;;;;9900:12:0::1;9882:15;9922:23:::0;;;:14:::1;:23;::::0;;;;:35;-1:-1:-1;9708:256:0:o;10093:243::-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;10190:12:0::1;::::0;:37:::1;::::0;-1:-1:-1;;;10190:37:0;;10221:4:::1;10190:37;::::0;::::1;7479:51:77::0;10167:20:0::1;::::0;10190:12:::1;::::0;::::1;-1:-1:-1::0;;;;;10190:12:0::1;::::0;:22:::1;::::0;7452:18:77;;10190:37:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10167:60:::0;-1:-1:-1;10241:16:0;;10237:93:::1;;10299:5;::::0;10273:12:::1;::::0;:46:::1;::::0;-1:-1:-1;;;;;10299:5:0::1;10273:12:::0;;::::1;::::0;::::1;::::0;10299:5:::1;10306:12:::0;10273:25:::1;:46::i;3329:145:18:-:0;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:18;;;;;;;;;;;;;;;3329:145::o;3531:153:21:-;3625:52;929:10:29;3658:8:21;3668;3625:18;:52::i;5684:147:18:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;6458:233:0:-:0;6565:17;;;;6564:18;6556:62;;;;-1:-1:-1;;;6556:62:0;;14905:2:77;6556:62:0;;;14887:21:77;14944:2;14924:18;;;14917:30;14983:33;14963:18;;;14956:61;15034:18;;6556:62:0;14703:355:77;6556:62:0;6666:17;;6628:56;;6645:2;;6649:3;;6654:7;;6663:1;;6666:17;;6628:16;:56::i;7797:191::-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;7908:5:0::1;7917:1;7908:10:::0;7900:44:::1;;;::::0;-1:-1:-1;;;7900:44:0;;21442:2:77;7900:44:0::1;::::0;::::1;21424:21:77::0;21481:2;21461:18;;;21454:30;-1:-1:-1;;;21500:18:77;;;21493:51;21561:18;;7900:44:0::1;21240:345:77::0;7900:44:0::1;-1:-1:-1::0;7954:19:0::1;::::0;;;:10:::1;:19;::::0;;;;;:27;7797:191::o;3984:394:21:-;-1:-1:-1;;;;;4184:20:21;;929:10:29;4184:20:21;;:60;;-1:-1:-1;4208:36:21;4225:4;929:10:29;3751:166:21;:::i;4208:36::-;4163:153;;;;-1:-1:-1;;;4163:153:21;;;;;;;:::i;:::-;4326:45;4344:4;4350:2;4354;4358:6;4366:4;4326:17;:45::i;660:285:24:-;-1:-1:-1;;;;;764:23:24;;929:10:29;764:23:24;;:66;;-1:-1:-1;791:39:24;808:7;929:10:29;3751:166:21;:::i;791:39:24:-;743:159;;;;-1:-1:-1;;;743:159:24;;;;;;;:::i;:::-;913:25;919:7;928:2;932:5;913;:25::i;8457:120:0:-;2495:4:18;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;8569:1:0::1;8547:19:::0;;;:10:::1;:19;::::0;;;;:23;8457:120::o;3029:213:18:-;3114:4;-1:-1:-1;;;;;;3137:58:18;;-1:-1:-1;;;3137:58:18;;:98;;;3199:36;3223:11;3199:23;:36::i;1664:346:26:-;1757:22;1782:19;;;:10;:19;;;;;1757:44;;1732:13;;1757:22;1782:19;1757:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:1;1915:8;1909:22;:26;:94;;1985:18;1995:7;1985:9;:18::i;:::-;1909:94;;;1962:8;1972;1945:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1909:94;1902:101;1664:346;-1:-1:-1;;;1664:346:26:o;3010:890:0:-;3120:18;1033:16:25;;;:12;:16;;;;;;3120:18:0;;3241:1;3232:6;:10;3224:41;;;;-1:-1:-1;;;3224:41:0;;22817:2:77;3224:41:0;;;22799:21:77;22856:2;22836:18;;;22829:30;-1:-1:-1;;;22875:18:77;;;22868:48;22933:18;;3224:41:0;22615:342:77;3224:41:0;3309:18;;;;:14;:18;;;;;;3283:22;3299:6;3283:13;:22;:::i;:::-;:44;;3275:81;;;;-1:-1:-1;;;3275:81:0;;23294:2:77;3275:81:0;;;23276:21:77;23333:2;23313:18;;;23306:30;-1:-1:-1;;;23352:18:77;;;23345:54;23416:18;;3275:81:0;23092:348:77;3275:81:0;3385:5;;-1:-1:-1;;;;;3385:5:0;3371:10;:19;3367:442;;3406:14;;;;:10;:14;;;;;;:19;:75;;3467:14;;;;:10;:14;;;;;;;-1:-1:-1;3467:14:0;3406:75;;;3440:12;;3428:24;;;3406:75;-1:-1:-1;3508:21:0;:9;3522:6;3508:13;:21::i;:::-;3495:34;;3547:8;3543:205;;;3592:10;3583:5;:19;;3575:51;;;;-1:-1:-1;;;3575:51:0;;23647:2:77;3575:51:0;;;23629:21:77;23686:2;23666:18;;;23659:30;-1:-1:-1;;;23705:18:77;;;23698:49;23764:18;;3575:51:0;23445:343:77;3575:51:0;3543:205;;;3665:12;;:68;;:12;;;-1:-1:-1;;;;;3665:12:0;3695:10;3715:4;3722:10;3665:29;:68::i;:::-;3766:32;;;-1:-1:-1;;;;;24042:32:77;;24024:51;;24106:2;24091:18;;24084:34;;;24134:18;;;24127:34;;;24192:2;24177:18;;24170:34;;;3766:32:0;;24011:3:77;23996:19;3766:32:0;;;;;;;3367:442;3818:10;;-1:-1:-1;;;3818:10:0;;-1:-1:-1;;;;;3818:10:0;:15;3834:2;3838:19;:6;3849:7;3838:10;:19::i;:::-;3818:40;;-1:-1:-1;;;;;;3818:40:0;;;;;;;-1:-1:-1;;;;;24407:32:77;;;3818:40:0;;;24389:51:77;24456:18;;;24449:34;24362:18;;3818:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3868:25;3874:2;3878;3882:6;3868:25;;;;;;;;;;;;:5;:25::i;:::-;3110:790;;;3010:890;;;;;:::o;4906:1210::-;5104:5;;5037:18;;;;-1:-1:-1;;;;;5104:5:0;5090:10;:19;5086:939;;5126:9;5121:647;5145:3;:10;5141:1;:14;5121:647;;;5193:1;5180:7;5188:1;5180:10;;;;;;;;:::i;:::-;;;;;;;:14;5172:45;;;;-1:-1:-1;;;5172:45:0;;22817:2:77;5172:45:0;;;22799:21:77;22856:2;22836:18;;;22829:30;-1:-1:-1;;;22875:18:77;;;22868:48;22933:18;;5172:45:0;22615:342:77;5172:45:0;5244:12;;5235:6;;-1:-1:-1;;;;;5244:12:0;;;;5235:3;;5239:1;;5235:6;;;;;;:::i;:::-;;;;;;;:21;5231:88;;;5297:3;5301:1;5297:6;;;;;;;;:::i;:::-;;;;;;;5283:21;;-1:-1:-1;;;5283:21:0;;;;;;616:25:77;;604:2;589:18;;470:177;5231:88:0;5332:21;5356:19;5368:3;5372:1;5368:6;;;;;;;;:::i;:::-;;;;;;;1007:7:25;1033:16;;;:12;:16;;;;;;;945:111;5356:19:0;5332:43;;5427:14;:22;5442:3;5446:1;5442:6;;;;;;;;:::i;:::-;;;;;;;5427:22;;;;;;;;;;;;5413:7;5421:1;5413:10;;;;;;;;:::i;:::-;;;;;;;5397:13;:26;;;;:::i;:::-;:52;;5389:89;;;;-1:-1:-1;;;5389:89:0;;23294:2:77;5389:89:0;;;23276:21:77;23333:2;23313:18;;;23306:30;-1:-1:-1;;;23352:18:77;;;23345:54;23416:18;;5389:89:0;23092:348:77;5389:89:0;5492:17;5523:10;:18;5534:3;5538:1;5534:6;;;;;;;;:::i;:::-;;;;;;;5523:18;;;;;;;;;;;;5545:1;5523:23;:83;;5588:10;:18;5599:3;5603:1;5599:6;;;;;;;;:::i;:::-;;;;;;;5588:18;;;;;;;;;;;;5576:30;;;5523:83;;;-1:-1:-1;5561:12:0;;;5523:83;;5634:25;5648:7;5656:1;5648:10;;;;;;;;:::i;:::-;;;;;;;5634:9;:13;;:25;;;;:::i;:::-;5620:39;;;;:::i;:::-;;;5688:7;5696:1;5688:10;;;;;;;;:::i;:::-;;;;;;;5673:25;;;;;:::i;:::-;;-1:-1:-1;;;5740:3:0;;5121:647;;;;5781:8;5777:189;;;5822:10;5813:5;:19;;5805:51;;;;-1:-1:-1;;;5805:51:0;;23647:2:77;5805:51:0;;;23629:21:77;23686:2;23666:18;;;23659:30;-1:-1:-1;;;23705:18:77;;;23698:49;23764:18;;5805:51:0;23445:343:77;5805:51:0;5777:189;;;5887:12;;:68;;:12;;;-1:-1:-1;;;;;5887:12:0;5917:10;5937:4;5944:10;5887:29;:68::i;:::-;5980:38;;;-1:-1:-1;;;;;24714:32:77;;24696:51;;24778:2;24763:18;;24756:34;;;24806:18;;;24799:34;;;5980:38:0;;24684:2:77;24669:18;5980:38:0;;;;;;;5086:939;6030:10;;-1:-1:-1;;;6030:10:0;;-1:-1:-1;;;;;6030:10:0;:15;6046:2;6050:24;:11;6066:7;6050:15;:24::i;:::-;6030:45;;-1:-1:-1;;;;;;6030:45:0;;;;;;;-1:-1:-1;;;;;24407:32:77;;;6030:45:0;;;24389:51:77;24456:18;;;24449:34;24362:18;;6030:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6081:32;6092:2;6096:3;6101:7;6081:32;;;;;;;;;;;;:10;:32::i;:::-;5031:1085;;4906:1210;;;;;:::o;3768:103:18:-;3834:30;3845:4;929:10:29;3834::18;:30::i;:::-;3768:103;:::o;2090:163:26:-;2175:19;;;;:10;:19;;;;;:30;2197:8;2175:19;:30;:::i;:::-;;2238:7;2220:26;2224:12;2228:7;2224:3;:12::i;:::-;2220:26;;;;;;:::i;:::-;;;;;;;;2090:163;;:::o;6619:1115:21:-;6839:7;:14;6825:3;:10;:28;6817:81;;;;-1:-1:-1;;;6817:81:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;6916:16:21;;6908:66;;;;-1:-1:-1;;;6908:66:21;;;;;;;:::i;:::-;929:10:29;7027:60:21;929:10:29;7058:4:21;7064:2;7068:3;7073:7;7082:4;7027:20;:60::i;:::-;7103:9;7098:411;7122:3;:10;7118:1;:14;7098:411;;;7153:10;7166:3;7170:1;7166:6;;;;;;;;:::i;:::-;;;;;;;7153:19;;7186:14;7203:7;7211:1;7203:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7228:19;7250:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7250:19:21;;;;;;;;;;;;7203:10;;-1:-1:-1;7291:21:21;;;;7283:76;;;;-1:-1:-1;;;7283:76:21;;;;;;;:::i;:::-;7401:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7401:19:21;;;;;;;;;;7423:20;;;7401:42;;7471:17;;;;;;;:27;;7423:20;;7401:13;7471:27;;7423:20;;7471:27;:::i;:::-;;;;;;;;7139:370;;;7134:3;;;;:::i;:::-;;;7098:411;;;;7554:2;-1:-1:-1;;;;;7524:47:21;7548:4;-1:-1:-1;;;;;7524:47:21;7538:8;-1:-1:-1;;;;;7524:47:21;;7558:3;7563:7;7524:47;;;;;;;:::i;:::-;;;;;;;;7652:75;7688:8;7698:4;7704:2;7708:3;7713:7;7722:4;7652:35;:75::i;:::-;6807:927;6619:1115;;;;;:::o;7917:233:18:-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:18;;;;;;;;;:36;;-1:-1:-1;;8038:36:18;8070:4;8038:36;;;8120:12;929:10:29;;850:96;8120:12:18;-1:-1:-1;;;;;8093:40:18;8111:7;-1:-1:-1;;;;;8093:40:18;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:18;;;;;;;;;;:37;;-1:-1:-1;;8442:37:18;;;8498:40;929:10:29;;8442:12:18;;8498:40;;8474:5;8498:40;8321:234;;:::o;2335:96:26:-;2406:8;:18;2417:7;2406:8;:18;:::i;12149:913:21:-;-1:-1:-1;;;;;12266:18:21;;12258:66;;;;-1:-1:-1;;;12258:66:21;;;;;;;:::i;:::-;12356:7;:14;12342:3;:10;:28;12334:81;;;;-1:-1:-1;;;12334:81:21;;;;;;;:::i;:::-;12426:16;929:10:29;12426:31:21;;12468:66;12489:8;12499:4;12513:1;12517:3;12522:7;12468:66;;;;;;;;;;;;:20;:66::i;:::-;12550:9;12545:364;12569:3;:10;12565:1;:14;12545:364;;;12600:10;12613:3;12617:1;12613:6;;;;;;;;:::i;:::-;;;;;;;12600:19;;12633:14;12650:7;12658:1;12650:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12675:19;12697:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12697:19:21;;;;;;;;;;;;12650:10;;-1:-1:-1;12738:21:21;;;;12730:70;;;;-1:-1:-1;;;12730:70:21;;;;;;;:::i;:::-;12842:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12842:19:21;;;;;;;;;;12864:20;;12842:42;;12581:3;;;;:::i;:::-;;;;12545:364;;;;12962:1;-1:-1:-1;;;;;12924:55:21;12948:4;-1:-1:-1;;;;;12924:55:21;12938:8;-1:-1:-1;;;;;12924:55:21;;12966:3;12971:7;12924:55;;;;;;;:::i;:::-;;;;;;;;12990:65;;;;;;;;;13034:1;12990:65;;;12248:814;12149:913;;;:::o;1300:117::-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;1380:30:21::1;1405:4;1380:24;:30::i;2151:65:18:-:0;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;2151:65:18:o;763:205:53:-;902:58;;-1:-1:-1;;;;;24407:32:77;;902:58:53;;;24389:51:77;24456:18;;;24449:34;;;875:86:53;;895:5;;-1:-1:-1;;;925:23:53;24362:18:77;;902:58:53;;;;-1:-1:-1;;902:58:53;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:53;-1:-1:-1;;;;;;902:58:53;;;;;;;;;;875:19;:86::i;13198:293:21:-;13318:8;-1:-1:-1;;;;;13309:17:21;:5;-1:-1:-1;;;;;13309:17:21;;13301:71;;;;-1:-1:-1;;;13301:71:21;;27963:2:77;13301:71:21;;;27945:21:77;28002:2;27982:18;;;27975:30;28041:34;28021:18;;;28014:62;-1:-1:-1;;;28092:18:77;;;28085:39;28141:19;;13301:71:21;27761:405:77;13301:71:21;-1:-1:-1;;;;;13382:25:21;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13382:46:21;;;;;;;;;;13443:41;;1178::77;;;13443::21;;1151:18:77;13443:41:21;;;;;;;13198:293;;;:::o;5326:947::-;-1:-1:-1;;;;;5507:16:21;;5499:66;;;;-1:-1:-1;;;5499:66:21;;;;;;;:::i;:::-;929:10:29;5576:16:21;5640:21;5658:2;5640:17;:21::i;:::-;5617:44;;5671:24;5698:25;5716:6;5698:17;:25::i;:::-;5671:52;;5734:60;5755:8;5765:4;5771:2;5775:3;5780:7;5789:4;5734:20;:60::i;:::-;5805:19;5827:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5827:19:21;;;;;;;;;;5864:21;;;;5856:76;;;;-1:-1:-1;;;5856:76:21;;;;;;;:::i;:::-;5966:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5966:19:21;;;;;;;;;;5988:20;;;5966:42;;6028:17;;;;;;;:27;;5988:20;;5966:13;6028:27;;5988:20;;6028:27;:::i;:::-;;;;-1:-1:-1;;6071:46:21;;;28345:25:77;;;28401:2;28386:18;;28379:34;;;-1:-1:-1;;;;;6071:46:21;;;;;;;;;;;;;;28318:18:77;6071:46:21;;;;;;;6198:68;6229:8;6239:4;6245:2;6249;6253:6;6261:4;6198:30;:68::i;:::-;5489:784;;;;5326:947;;;;;:::o;11154:756::-;-1:-1:-1;;;;;11246:18:21;;11238:66;;;;-1:-1:-1;;;11238:66:21;;;;;;;:::i;:::-;929:10:29;11315:16:21;11379:21;11397:2;11379:17;:21::i;:::-;11356:44;;11410:24;11437:25;11455:6;11437:17;:25::i;:::-;11410:52;;11473:66;11494:8;11504:4;11518:1;11522:3;11527:7;11473:66;;;;;;;;;;;;:20;:66::i;:::-;11550:19;11572:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11572:19:21;;;;;;;;;;11609:21;;;;11601:70;;;;-1:-1:-1;;;11601:70:21;;;;;;;:::i;:::-;11705:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11705:19:21;;;;;;;;;;;;11727:20;;;11705:42;;11773:54;;28345:25:77;;;28386:18;;;28379:34;;;11705:19:21;;11773:54;;;;;;28318:18:77;11773:54:21;;;;;;;11838:65;;;;;;;;;11882:1;11838:65;;;6619:1115;1600:349;1724:4;-1:-1:-1;;;;;;1759:52:21;;-1:-1:-1;;;1759:52:21;;:131;;-1:-1:-1;;;;;;;1827:63:21;;-1:-1:-1;;;1827:63:21;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:31;;;1906:36:21;1060:166:31;2348:103:21;2408:13;2440:4;2433:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:103;;;:::o;3465:96:71:-;3523:7;3549:5;3553:1;3549;:5;:::i;974:241:53:-;1139:68;;-1:-1:-1;;;;;28855:15:77;;;1139:68:53;;;28837:34:77;28907:15;;28887:18;;;28880:43;28939:18;;;28932:34;;;1112:96:53;;1132:5;;-1:-1:-1;;;1162:27:53;28772:18:77;;1139:68:53;28597:375:77;9016:671:21;-1:-1:-1;;;;;9125:16:21;;9117:62;;;;-1:-1:-1;;;9117:62:21;;;;;;;:::i;:::-;929:10:29;9190:16:21;9254:21;9272:2;9254:17;:21::i;:::-;9231:44;;9285:24;9312:25;9330:6;9312:17;:25::i;:::-;9285:52;;9348:66;9369:8;9387:1;9391:2;9395:3;9400:7;9409:4;9348:20;:66::i;:::-;9425:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9425:17:21;;;;;;;;;:27;;9446:6;;9425:13;:27;;9446:6;;9425:27;:::i;:::-;;;;-1:-1:-1;;9467:52:21;;;28345:25:77;;;28401:2;28386:18;;28379:34;;;-1:-1:-1;;;;;9467:52:21;;;;9500:1;;9467:52;;;;;;28318:18:77;9467:52:21;;;;;;;9606:74;9637:8;9655:1;9659:2;9663;9667:6;9675:4;9606:30;:74::i;10077:791::-;-1:-1:-1;;;;;10249:16:21;;10241:62;;;;-1:-1:-1;;;10241:62:21;;;;;;;:::i;:::-;10335:7;:14;10321:3;:10;:28;10313:81;;;;-1:-1:-1;;;10313:81:21;;;;;;;:::i;:::-;929:10:29;10447:66:21;929:10:29;10405:16:21;10490:2;10494:3;10499:7;10508:4;10447:20;:66::i;:::-;10529:9;10524:101;10548:3;:10;10544:1;:14;10524:101;;;10604:7;10612:1;10604:10;;;;;;;;:::i;:::-;;;;;;;10579:9;:17;10589:3;10593:1;10589:6;;;;;;;;:::i;:::-;;;;;;;10579:17;;;;;;;;;;;:21;10597:2;-1:-1:-1;;;;;10579:21:21;-1:-1:-1;;;;;10579:21:21;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10560:3:21;;-1:-1:-1;10560:3:21;;;:::i;:::-;;;;10524:101;;;;10676:2;-1:-1:-1;;;;;10640:53:21;10672:1;-1:-1:-1;;;;;10640:53:21;10654:8;-1:-1:-1;;;;;10640:53:21;;10680:3;10685:7;10640:53;;;;;;;:::i;:::-;;;;;;;;10780:81;10816:8;10834:1;10838:2;10842:3;10847:7;10856:4;10780:35;:81::i;4152:501:18:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:18;;;;;;;;;;-1:-1:-1;;;4278:358:18;;;;;;;:::i;11366:342:0:-;11635:66;11662:8;11672:4;11678:2;11682:3;11687:7;11696:4;11635:26;:66::i;16546:814:21:-;-1:-1:-1;;;;;16778:13:21;;1713:19:28;:23;16774:580:21;;16813:90;;-1:-1:-1;;;16813:90:21;;-1:-1:-1;;;;;16813:54:21;;;;;:90;;16868:8;;16878:4;;16884:3;;16889:7;;16898:4;;16813:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16813:90:21;;;;;;;;-1:-1:-1;;16813:90:21;;;;;;;;;;;;:::i;:::-;;;16809:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17220:6;17213:14;;-1:-1:-1;;;17213:14:21;;;;;;;;:::i;16809:535::-;;;17267:62;;-1:-1:-1;;;17267:62:21;;32344:2:77;17267:62:21;;;32326:21:77;32383:2;32363:18;;;32356:30;32422:34;32402:18;;;32395:62;-1:-1:-1;;;32473:18:77;;;32466:50;32533:19;;17267:62:21;32142:416:77;16809:535:21;-1:-1:-1;;;;;;16982:71:21;;-1:-1:-1;;;16982:71:21;16978:168;;17077:50;;-1:-1:-1;;;17077:50:21;;;;;;;:::i;1423:110::-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;1513:13:21::1;1521:4;1513:7;:13::i;3747:706:53:-:0;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:53;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:53;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:53;;33424:2:77;4351:85:53;;;33406:21:77;33463:2;33443:18;;;33436:30;33502:34;33482:18;;;33475:62;-1:-1:-1;;;33553:18:77;;;33546:40;33603:19;;4351:85:53;33222:406:77;17366:193:21;17485:16;;;17499:1;17485:16;;;;;;;;;17432;;17460:22;;17485:16;;;;;;;;;;;;-1:-1:-1;17485:16:21;17460:41;;17522:7;17511:5;17517:1;17511:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17547:5;17366:193;-1:-1:-1;;17366:193:21:o;15793:747::-;-1:-1:-1;;;;;16000:13:21;;1713:19:28;:23;15996:538:21;;16035:83;;-1:-1:-1;;;16035:83:21;;-1:-1:-1;;;;;16035:49:21;;;;;:83;;16085:8;;16095:4;;16101:2;;16105:6;;16113:4;;16035:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16035:83:21;;;;;;;;-1:-1:-1;;16035:83:21;;;;;;;;;;;;:::i;:::-;;;16031:493;;;;:::i;:::-;-1:-1:-1;;;;;;16167:66:21;;-1:-1:-1;;;16167:66:21;16163:163;;16257:50;;-1:-1:-1;;;16257:50:21;;;;;;;:::i;2473:149:30:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:30;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;-1:-1:-1;;;;;2006:25:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:30;;1984:47;;-1:-1:-1;;;2041:6:30;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:30;;;;;;;;;-1:-1:-1;;;2066:6:30;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:30;;;;;;;;-1:-1:-1;2096:9:30;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:30;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:30;;;;;;;;-1:-1:-1;2207:1:30;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:30;;2228:55;;;;-1:-1:-1;;;2228:55:30;;34542:2:77;2228:55:30;;;34524:21:77;;;34561:18;;;34554:30;34620:34;34600:18;;;34593:62;34672:18;;2228:55:30;34340:356:77;1350:904:25;-1:-1:-1;;;;;1662:18:25;;1658:156;;1701:9;1696:108;1720:3;:10;1716:1;:14;1696:108;;;1779:7;1787:1;1779:10;;;;;;;;:::i;:::-;;;;;;;1755:12;:20;1768:3;1772:1;1768:6;;;;;;;;:::i;:::-;;;;;;;1755:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1732:3:25;;-1:-1:-1;1732:3:25;;:::i;:::-;;;1696:108;;;;1658:156;-1:-1:-1;;;;;1828:16:25;;1824:424;;1865:9;1860:378;1884:3;:10;1880:1;:14;1860:378;;;1919:10;1932:3;1936:1;1932:6;;;;;;;;:::i;:::-;;;;;;;1919:19;;1956:14;1973:7;1981:1;1973:10;;;;;;;;:::i;:::-;;;;;;;1956:27;;2001:14;2018:12;:16;2031:2;2018:16;;;;;;;;;;;;2001:33;;2070:6;2060;:16;;2052:69;;;;-1:-1:-1;;;2052:69:25;;34903:2:77;2052:69:25;;;34885:21:77;34942:2;34922:18;;;34915:30;34981:34;34961:18;;;34954:62;-1:-1:-1;;;35032:18:77;;;35025:38;35080:19;;2052:69:25;34701:404:77;2052:69:25;2171:16;;;;:12;:16;;;;;;2190:15;;2171:34;;1896:3;;;:::i;:::-;;;1860:378;;8557:86:21;8623:4;:13;8630:6;8623:4;:13;:::i;3873:223:60:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:60:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:60;;35312:2:77;5149:81:60;;;35294:21:77;35351:2;35331:18;;;35324:30;35390:34;35370:18;;;35363:62;-1:-1:-1;;;35441:18:77;;;35434:36;35487:19;;5149:81:60;35110:402:77;5149:81:60;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:60;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:60:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1713:19:28;;;7908:60:60;;;;-1:-1:-1;;;7908:60:60;;36011:2:77;7908:60:60;;;35993:21:77;36050:2;36030:18;;;36023:30;36089:31;36069:18;;;36062:59;36138:18;;7908:60:60;35809:353:77;7908:60:60;-1:-1:-1;8003:10:60;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;14:131:77;-1:-1:-1;;;;;89:31:77;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:77:o;652:131::-;-1:-1:-1;;;;;;726:32:77;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;1230:180::-;1289:6;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;-1:-1:-1;1381:23:77;;1230:180;-1:-1:-1;1230:180:77:o;1415:250::-;1500:1;1510:113;1524:6;1521:1;1518:13;1510:113;;;1600:11;;;1594:18;1581:11;;;1574:39;1546:2;1539:10;1510:113;;;-1:-1:-1;;1657:1:77;1639:16;;1632:27;1415:250::o;1670:271::-;1712:3;1750:5;1744:12;1777:6;1772:3;1765:19;1793:76;1862:6;1855:4;1850:3;1846:14;1839:4;1832:5;1828:16;1793:76;:::i;:::-;1923:2;1902:15;-1:-1:-1;;1898:29:77;1889:39;;;;1930:4;1885:50;;1670:271;-1:-1:-1;;1670:271:77:o;1946:220::-;2095:2;2084:9;2077:21;2058:4;2115:45;2156:2;2145:9;2141:18;2133:6;2115:45;:::i;2171:383::-;2248:6;2256;2264;2317:2;2305:9;2296:7;2292:23;2288:32;2285:52;;;2333:1;2330;2323:12;2285:52;2372:9;2359:23;2391:31;2416:5;2391:31;:::i;:::-;2441:5;2493:2;2478:18;;2465:32;;-1:-1:-1;2544:2:77;2529:18;;;2516:32;;2171:383;-1:-1:-1;;;2171:383:77:o;2559:127::-;2620:10;2615:3;2611:20;2608:1;2601:31;2651:4;2648:1;2641:15;2675:4;2672:1;2665:15;2691:249;2801:2;2782:13;;-1:-1:-1;;2778:27:77;2766:40;;-1:-1:-1;;;;;2821:34:77;;2857:22;;;2818:62;2815:88;;;2883:18;;:::i;:::-;2919:2;2912:22;-1:-1:-1;;2691:249:77:o;2945:183::-;3005:4;-1:-1:-1;;;;;3030:6:77;3027:30;3024:56;;;3060:18;;:::i;:::-;-1:-1:-1;3105:1:77;3101:14;3117:4;3097:25;;2945:183::o;3133:724::-;3187:5;3240:3;3233:4;3225:6;3221:17;3217:27;3207:55;;3258:1;3255;3248:12;3207:55;3294:6;3281:20;3320:4;3343:43;3383:2;3343:43;:::i;:::-;3415:2;3409:9;3427:31;3455:2;3447:6;3427:31;:::i;:::-;3493:18;;;3585:1;3581:10;;;;3569:23;;3565:32;;;3527:15;;;;-1:-1:-1;3609:15:77;;;3606:35;;;3637:1;3634;3627:12;3606:35;3673:2;3665:6;3661:15;3685:142;3701:6;3696:3;3693:15;3685:142;;;3767:17;;3755:30;;3805:12;;;;3718;;3685:142;;;-1:-1:-1;3845:6:77;3133:724;-1:-1:-1;;;;;;3133:724:77:o;3862:730::-;3989:6;3997;4005;4058:2;4046:9;4037:7;4033:23;4029:32;4026:52;;;4074:1;4071;4064:12;4026:52;4113:9;4100:23;4132:31;4157:5;4132:31;:::i;:::-;4182:5;-1:-1:-1;4238:2:77;4223:18;;4210:32;-1:-1:-1;;;;;4291:14:77;;;4288:34;;;4318:1;4315;4308:12;4288:34;4341:61;4394:7;4385:6;4374:9;4370:22;4341:61;:::i;:::-;4331:71;;4455:2;4444:9;4440:18;4427:32;4411:48;;4484:2;4474:8;4471:16;4468:36;;;4500:1;4497;4490:12;4468:36;;4523:63;4578:7;4567:8;4556:9;4552:24;4523:63;:::i;:::-;4513:73;;;3862:730;;;;;:::o;4597:556::-;4640:5;4693:3;4686:4;4678:6;4674:17;4670:27;4660:55;;4711:1;4708;4701:12;4660:55;4747:6;4734:20;-1:-1:-1;;;;;4769:2:77;4766:26;4763:52;;;4795:18;;:::i;:::-;4844:2;4838:9;4856:67;4911:2;4892:13;;-1:-1:-1;;4888:27:77;4917:4;4884:38;4838:9;4856:67;:::i;:::-;4947:2;4939:6;4932:18;4993:3;4986:4;4981:2;4973:6;4969:15;4965:26;4962:35;4959:55;;;5010:1;5007;5000:12;4959:55;5074:2;5067:4;5059:6;5055:17;5048:4;5040:6;5036:17;5023:54;5121:1;5097:15;;;5114:4;5093:26;5086:37;;;;5101:6;4597:556;-1:-1:-1;;;4597:556:77:o;5158:390::-;5236:6;5244;5297:2;5285:9;5276:7;5272:23;5268:32;5265:52;;;5313:1;5310;5303:12;5265:52;5349:9;5336:23;5326:33;;5410:2;5399:9;5395:18;5382:32;-1:-1:-1;;;;;5429:6:77;5426:30;5423:50;;;5469:1;5466;5459:12;5423:50;5492;5534:7;5525:6;5514:9;5510:22;5492:50;:::i;:::-;5482:60;;;5158:390;;;;;:::o;5920:1072::-;6074:6;6082;6090;6098;6106;6159:3;6147:9;6138:7;6134:23;6130:33;6127:53;;;6176:1;6173;6166:12;6127:53;6215:9;6202:23;6234:31;6259:5;6234:31;:::i;:::-;6284:5;-1:-1:-1;6341:2:77;6326:18;;6313:32;6354:33;6313:32;6354:33;:::i;:::-;6406:7;-1:-1:-1;6464:2:77;6449:18;;6436:32;-1:-1:-1;;;;;6517:14:77;;;6514:34;;;6544:1;6541;6534:12;6514:34;6567:61;6620:7;6611:6;6600:9;6596:22;6567:61;:::i;:::-;6557:71;;6681:2;6670:9;6666:18;6653:32;6637:48;;6710:2;6700:8;6697:16;6694:36;;;6726:1;6723;6716:12;6694:36;6749:63;6804:7;6793:8;6782:9;6778:24;6749:63;:::i;:::-;6739:73;;6865:3;6854:9;6850:19;6837:33;6821:49;;6895:2;6885:8;6882:16;6879:36;;;6911:1;6908;6901:12;6879:36;;6934:52;6978:7;6967:8;6956:9;6952:24;6934:52;:::i;:::-;6924:62;;;5920:1072;;;;;;;;:::o;6997:315::-;7065:6;7073;7126:2;7114:9;7105:7;7101:23;7097:32;7094:52;;;7142:1;7139;7132:12;7094:52;7178:9;7165:23;7155:33;;7238:2;7227:9;7223:18;7210:32;7251:31;7276:5;7251:31;:::i;:::-;7301:5;7291:15;;;6997:315;;;;;:::o;7754:118::-;7840:5;7833:13;7826:21;7819:5;7816:32;7806:60;;7862:1;7859;7852:12;7877:241;7933:6;7986:2;7974:9;7965:7;7961:23;7957:32;7954:52;;;8002:1;7999;7992:12;7954:52;8041:9;8028:23;8060:28;8082:5;8060:28;:::i;8123:1277::-;8241:6;8249;8302:2;8290:9;8281:7;8277:23;8273:32;8270:52;;;8318:1;8315;8308:12;8270:52;8358:9;8345:23;-1:-1:-1;;;;;8428:2:77;8420:6;8417:14;8414:34;;;8444:1;8441;8434:12;8414:34;8482:6;8471:9;8467:22;8457:32;;8527:7;8520:4;8516:2;8512:13;8508:27;8498:55;;8549:1;8546;8539:12;8498:55;8585:2;8572:16;8607:4;8630:43;8670:2;8630:43;:::i;:::-;8702:2;8696:9;8714:31;8742:2;8734:6;8714:31;:::i;:::-;8780:18;;;8868:1;8864:10;;;;8856:19;;8852:28;;;8814:15;;;;-1:-1:-1;8892:19:77;;;8889:39;;;8924:1;8921;8914:12;8889:39;8948:11;;;;8968:217;8984:6;8979:3;8976:15;8968:217;;;9064:3;9051:17;9081:31;9106:5;9081:31;:::i;:::-;9125:18;;9001:12;;;;9163;;;;8968:217;;;9204:6;-1:-1:-1;;9248:18:77;;9235:32;;-1:-1:-1;;9279:16:77;;;9276:36;;;9308:1;9305;9298:12;9276:36;;9331:63;9386:7;9375:8;9364:9;9360:24;9331:63;:::i;9405:435::-;9458:3;9496:5;9490:12;9523:6;9518:3;9511:19;9549:4;9578:2;9573:3;9569:12;9562:19;;9615:2;9608:5;9604:14;9636:1;9646:169;9660:6;9657:1;9654:13;9646:169;;;9721:13;;9709:26;;9755:12;;;;9790:15;;;;9682:1;9675:9;9646:169;;;-1:-1:-1;9831:3:77;;9405:435;-1:-1:-1;;;;;9405:435:77:o;9845:261::-;10024:2;10013:9;10006:21;9987:4;10044:56;10096:2;10085:9;10081:18;10073:6;10044:56;:::i;10111:322::-;10180:6;10233:2;10221:9;10212:7;10208:23;10204:32;10201:52;;;10249:1;10246;10239:12;10201:52;10289:9;10276:23;-1:-1:-1;;;;;10314:6:77;10311:30;10308:50;;;10354:1;10351;10344:12;10308:50;10377;10419:7;10410:6;10399:9;10395:22;10377:50;:::i;10438:263::-;10513:6;10566:2;10554:9;10545:7;10541:23;10537:32;10534:52;;;10582:1;10579;10572:12;10534:52;10621:9;10608:23;10640:31;10665:5;10640:31;:::i;10706:683::-;10818:6;10826;10834;10842;10895:3;10883:9;10874:7;10870:23;10866:33;10863:53;;;10912:1;10909;10902:12;10863:53;10952:9;10939:23;-1:-1:-1;;;;;10977:6:77;10974:30;10971:50;;;11017:1;11014;11007:12;10971:50;11040;11082:7;11073:6;11062:9;11058:22;11040:50;:::i;:::-;11030:60;;;11140:2;11129:9;11125:18;11112:32;11153:31;11178:5;11153:31;:::i;:::-;11203:5;-1:-1:-1;11260:2:77;11245:18;;11232:32;11273:33;11232:32;11273:33;:::i;:::-;10706:683;;;;-1:-1:-1;11325:7:77;;11379:2;11364:18;11351:32;;-1:-1:-1;;10706:683:77:o;11394:291::-;11571:6;11560:9;11553:25;11614:2;11609;11598:9;11594:18;11587:30;11534:4;11634:45;11675:2;11664:9;11660:18;11652:6;11634:45;:::i;11690:390::-;11768:6;11776;11829:2;11817:9;11808:7;11804:23;11800:32;11797:52;;;11845:1;11842;11835:12;11797:52;11885:9;11872:23;-1:-1:-1;;;;;11910:6:77;11907:30;11904:50;;;11950:1;11947;11940:12;11904:50;11973;12015:7;12006:6;11995:9;11991:22;11973:50;:::i;:::-;11963:60;12070:2;12055:18;;;;12042:32;;-1:-1:-1;;;;11690:390:77:o;12293:382::-;12358:6;12366;12419:2;12407:9;12398:7;12394:23;12390:32;12387:52;;;12435:1;12432;12425:12;12387:52;12474:9;12461:23;12493:31;12518:5;12493:31;:::i;:::-;12543:5;-1:-1:-1;12600:2:77;12585:18;;12572:32;12613:30;12572:32;12613:30;:::i;12680:388::-;12748:6;12756;12809:2;12797:9;12788:7;12784:23;12780:32;12777:52;;;12825:1;12822;12815:12;12777:52;12864:9;12851:23;12883:31;12908:5;12883:31;:::i;:::-;12933:5;-1:-1:-1;12990:2:77;12975:18;;12962:32;13003:33;12962:32;13003:33;:::i;13299:248::-;13367:6;13375;13428:2;13416:9;13407:7;13403:23;13399:32;13396:52;;;13444:1;13441;13434:12;13396:52;-1:-1:-1;;13467:23:77;;;13537:2;13522:18;;;13509:32;;-1:-1:-1;13299:248:77:o;13552:735::-;13656:6;13664;13672;13680;13688;13741:3;13729:9;13720:7;13716:23;13712:33;13709:53;;;13758:1;13755;13748:12;13709:53;13797:9;13784:23;13816:31;13841:5;13816:31;:::i;:::-;13866:5;-1:-1:-1;13923:2:77;13908:18;;13895:32;13936:33;13895:32;13936:33;:::i;:::-;13988:7;-1:-1:-1;14042:2:77;14027:18;;14014:32;;-1:-1:-1;14093:2:77;14078:18;;14065:32;;-1:-1:-1;14148:3:77;14133:19;;14120:33;-1:-1:-1;;;;;14165:30:77;;14162:50;;;14208:1;14205;14198:12;14162:50;14231;14273:7;14264:6;14253:9;14249:22;14231:50;:::i;15422:410::-;15624:2;15606:21;;;15663:2;15643:18;;;15636:30;15702:34;15697:2;15682:18;;15675:62;-1:-1:-1;;;15768:2:77;15753:18;;15746:44;15822:3;15807:19;;15422:410::o;16663:127::-;16724:10;16719:3;16715:20;16712:1;16705:31;16755:4;16752:1;16745:15;16779:4;16776:1;16769:15;16795:127;16856:10;16851:3;16847:20;16844:1;16837:31;16887:4;16884:1;16877:15;16911:4;16908:1;16901:15;16927:135;16966:3;16987:17;;;16984:43;;17007:18;;:::i;:::-;-1:-1:-1;17054:1:77;17043:13;;16927:135::o;18041:380::-;18120:1;18116:12;;;;18163;;;18184:61;;18238:4;18230:6;18226:17;18216:27;;18184:61;18291:2;18283:6;18280:14;18260:18;18257:38;18254:161;;18337:10;18332:3;18328:20;18325:1;18318:31;18372:4;18369:1;18362:15;18400:4;18397:1;18390:15;18254:161;;18041:380;;;:::o;18552:545::-;18654:2;18649:3;18646:11;18643:448;;;18690:1;18715:5;18711:2;18704:17;18760:4;18756:2;18746:19;18830:2;18818:10;18814:19;18811:1;18807:27;18801:4;18797:38;18866:4;18854:10;18851:20;18848:47;;;-1:-1:-1;18889:4:77;18848:47;18944:2;18939:3;18935:12;18932:1;18928:20;18922:4;18918:31;18908:41;;18999:82;19017:2;19010:5;19007:13;18999:82;;;19062:17;;;19043:1;19032:13;18999:82;;19273:1352;19399:3;19393:10;-1:-1:-1;;;;;19418:6:77;19415:30;19412:56;;;19448:18;;:::i;:::-;19477:97;19567:6;19527:38;19559:4;19553:11;19527:38;:::i;:::-;19521:4;19477:97;:::i;:::-;19629:4;;19693:2;19682:14;;19710:1;19705:663;;;;20412:1;20429:6;20426:89;;;-1:-1:-1;20481:19:77;;;20475:26;20426:89;-1:-1:-1;;19230:1:77;19226:11;;;19222:24;19218:29;19208:40;19254:1;19250:11;;;19205:57;20528:81;;19675:944;;19705:663;18499:1;18492:14;;;18536:4;18523:18;;-1:-1:-1;;19741:20:77;;;19859:236;19873:7;19870:1;19867:14;19859:236;;;19962:19;;;19956:26;19941:42;;20054:27;;;;20022:1;20010:14;;;;19889:19;;19859:236;;;19863:3;20123:6;20114:7;20111:19;20108:201;;;20184:19;;;20178:26;-1:-1:-1;;20267:1:77;20263:14;;;20279:3;20259:24;20255:37;20251:42;20236:58;20221:74;;20108:201;-1:-1:-1;;;;;20355:1:77;20339:14;;;20335:22;20322:36;;-1:-1:-1;19273:1352:77:o;20829:217::-;20867:3;-1:-1:-1;;;;;20956:2:77;20949:5;20945:14;20983:2;20974:7;20971:15;20968:41;;20989:18;;:::i;:::-;21038:1;21025:15;;20829:217;-1:-1:-1;;;20829:217:77:o;21051:184::-;21121:6;21174:2;21162:9;21153:7;21149:23;21145:32;21142:52;;;21190:1;21187;21180:12;21142:52;-1:-1:-1;21213:16:77;;21051:184;-1:-1:-1;21051:184:77:o;21590:1020::-;21766:3;21795:1;21828:6;21822:13;21858:36;21884:9;21858:36;:::i;:::-;21913:1;21930:18;;;21957:133;;;;22104:1;22099:356;;;;21923:532;;21957:133;-1:-1:-1;;21990:24:77;;21978:37;;22063:14;;22056:22;22044:35;;22035:45;;;-1:-1:-1;21957:133:77;;22099:356;22130:6;22127:1;22120:17;22160:4;22205:2;22202:1;22192:16;22230:1;22244:165;22258:6;22255:1;22252:13;22244:165;;;22336:14;;22323:11;;;22316:35;22379:16;;;;22273:10;;22244:165;;;22248:3;;;22438:6;22433:3;22429:16;22422:23;;21923:532;;;;;22486:6;22480:13;22502:68;22561:8;22556:3;22549:4;22541:6;22537:17;22502:68;:::i;:::-;22586:18;;21590:1020;-1:-1:-1;;;;21590:1020:77:o;22962:125::-;23027:9;;;23048:10;;;23045:36;;;23061:18;;:::i;24844:404::-;25046:2;25028:21;;;25085:2;25065:18;;;25058:30;25124:34;25119:2;25104:18;;25097:62;-1:-1:-1;;;25190:2:77;25175:18;;25168:38;25238:3;25223:19;;24844:404::o;25253:401::-;25455:2;25437:21;;;25494:2;25474:18;;;25467:30;25533:34;25528:2;25513:18;;25506:62;-1:-1:-1;;;25599:2:77;25584:18;;25577:35;25644:3;25629:19;;25253:401::o;25659:406::-;25861:2;25843:21;;;25900:2;25880:18;;;25873:30;25939:34;25934:2;25919:18;;25912:62;-1:-1:-1;;;26005:2:77;25990:18;;25983:40;26055:3;26040:19;;25659:406::o;26070:465::-;26327:2;26316:9;26309:21;26290:4;26353:56;26405:2;26394:9;26390:18;26382:6;26353:56;:::i;:::-;26457:9;26449:6;26445:22;26440:2;26429:9;26425:18;26418:50;26485:44;26522:6;26514;26485:44;:::i;:::-;26477:52;26070:465;-1:-1:-1;;;;;26070:465:77:o;26540:399::-;26742:2;26724:21;;;26781:2;26761:18;;;26754:30;26820:34;26815:2;26800:18;;26793:62;-1:-1:-1;;;26886:2:77;26871:18;;26864:33;26929:3;26914:19;;26540:399::o;26944:400::-;27146:2;27128:21;;;27185:2;27165:18;;;27158:30;27224:34;27219:2;27204:18;;27197:62;-1:-1:-1;;;27290:2:77;27275:18;;27268:34;27334:3;27319:19;;26944:400::o;27349:407::-;27551:2;27533:21;;;27590:2;27570:18;;;27563:30;27629:34;27624:2;27609:18;;27602:62;-1:-1:-1;;;27695:2:77;27680:18;;27673:41;27746:3;27731:19;;27349:407::o;28424:168::-;28497:9;;;28528;;28545:15;;;28539:22;;28525:37;28515:71;;28566:18;;:::i;28977:397::-;29179:2;29161:21;;;29218:2;29198:18;;;29191:30;29257:34;29252:2;29237:18;;29230:62;-1:-1:-1;;;29323:2:77;29308:18;;29301:31;29364:3;29349:19;;28977:397::o;29379:812::-;29790:25;29785:3;29778:38;29760:3;29845:6;29839:13;29861:75;29929:6;29924:2;29919:3;29915:12;29908:4;29900:6;29896:17;29861:75;:::i;:::-;-1:-1:-1;;;29995:2:77;29955:16;;;29987:11;;;29980:40;30045:13;;30067:76;30045:13;30129:2;30121:11;;30114:4;30102:17;;30067:76;:::i;:::-;30163:17;30182:2;30159:26;;29379:812;-1:-1:-1;;;;29379:812:77:o;30196:827::-;-1:-1:-1;;;;;30593:15:77;;;30575:34;;30645:15;;30640:2;30625:18;;30618:43;30555:3;30692:2;30677:18;;30670:31;;;30518:4;;30724:57;;30761:19;;30753:6;30724:57;:::i;:::-;30829:9;30821:6;30817:22;30812:2;30801:9;30797:18;30790:50;30863:44;30900:6;30892;30863:44;:::i;:::-;30849:58;;30956:9;30948:6;30944:22;30938:3;30927:9;30923:19;30916:51;30984:33;31010:6;31002;30984:33;:::i;:::-;30976:41;30196:827;-1:-1:-1;;;;;;;;30196:827:77:o;31028:249::-;31097:6;31150:2;31138:9;31129:7;31125:23;31121:32;31118:52;;;31166:1;31163;31156:12;31118:52;31198:9;31192:16;31217:30;31241:5;31217:30;:::i;31282:179::-;31317:3;31359:1;31341:16;31338:23;31335:120;;;31405:1;31402;31399;31384:23;-1:-1:-1;31442:1:77;31436:8;31431:3;31427:18;31335:120;31282:179;:::o;31466:671::-;31505:3;31547:4;31529:16;31526:26;31523:39;;;31466:671;:::o;31523:39::-;31589:2;31583:9;-1:-1:-1;;31654:16:77;31650:25;;31647:1;31583:9;31626:50;31705:4;31699:11;31729:16;-1:-1:-1;;;;;31835:2:77;31828:4;31820:6;31816:17;31813:25;31808:2;31800:6;31797:14;31794:45;31791:58;;;31842:5;;;;;31466:671;:::o;31791:58::-;31879:6;31873:4;31869:17;31858:28;;31915:3;31909:10;31942:2;31934:6;31931:14;31928:27;;;31948:5;;;;;;31466:671;:::o;31928:27::-;32032:2;32013:16;32007:4;32003:27;31999:36;31992:4;31983:6;31978:3;31974:16;31970:27;31967:69;31964:82;;;32039:5;;;;;;31466:671;:::o;31964:82::-;32055:57;32106:4;32097:6;32089;32085:19;32081:30;32075:4;32055:57;:::i;:::-;-1:-1:-1;32128:3:77;;31466:671;-1:-1:-1;;;;;31466:671:77:o;32563:404::-;32765:2;32747:21;;;32804:2;32784:18;;;32777:30;32843:34;32838:2;32823:18;;32816:62;-1:-1:-1;;;32909:2:77;32894:18;;32887:38;32957:3;32942:19;;32563:404::o;32972:245::-;33039:6;33092:2;33080:9;33071:7;33067:23;33063:32;33060:52;;;33108:1;33105;33098:12;33060:52;33140:9;33134:16;33159:28;33181:5;33159:28;:::i;33633:561::-;-1:-1:-1;;;;;33930:15:77;;;33912:34;;33982:15;;33977:2;33962:18;;33955:43;34029:2;34014:18;;34007:34;;;34072:2;34057:18;;34050:34;;;33892:3;34115;34100:19;;34093:32;;;33855:4;;34142:46;;34168:19;;34160:6;34142:46;:::i;34199:136::-;34238:3;34266:5;34256:39;;34275:18;;:::i;:::-;-1:-1:-1;;;34311:18:77;;34199:136::o;35517:287::-;35646:3;35684:6;35678:13;35700:66;35759:6;35754:3;35747:4;35739:6;35735:17;35700:66;:::i;:::-;35782:16;;;;;35517:287;-1:-1:-1;;35517:287:77:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "URI_SETTER_ROLE()": "7f345710",
    "addToken(string,uint256)": "8ca132f7",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "exists(uint256)": "4f558e79",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getTokenInfo(uint256)": "8c7a63ae",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(string,address,address,uint256)": "7ff7e616",
    "isApprovedForAll(address,address)": "e985e9c5",
    "maxTokenSupply(uint256)": "36f5cba5",
    "mint(address,uint256,uint256)": "156e29f6",
    "mintBatch(address,uint256[],uint256[])": "d81d0a15",
    "mintBatchWithNativeToken(address,uint256[],uint256[])": "15f8a01a",
    "mintWithNativeToken(address,uint256,uint256)": "5a8f7b86",
    "mitchToken()": "ea49b1cc",
    "nativeMintEnabled()": "0b70ede5",
    "owner()": "8da5cb5b",
    "paymentToken()": "3013ce29",
    "renounceRole(bytes32,address)": "36568abe",
    "resetTokenPrice(uint256)": "fc5abac1",
    "revokeRole(bytes32,address)": "d547741f",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "setDefaultPrice(uint256)": "6d3c7ec5",
    "setNativeTokenMinting(bool)": "37210b8f",
    "setPaymentToken(address)": "6a326ab1",
    "setTokenPrice(uint256,uint256)": "eb685c47",
    "setTokenURI(uint256,string)": "162094c4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenPrice(uint256)": "d4ddce8a",
    "totalSupply(uint256)": "bd85b039",
    "uniqueTokens()": "30e8fd65",
    "uri(uint256)": "0e89341c",
    "withdrawNativeToken()": "5a18664c",
    "withdrawTokens()": "8d8f2adb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NoTokenExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmounts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalPrice\",\"type\":\"uint256\"}],\"name\":\"MintBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"URI_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mitchToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maxTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mintBatchWithNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintWithNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mitchToken\",\"outputs\":[{\"internalType\":\"contract IMitchToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeMintEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"resetTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setDefaultPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setNativeTokenMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniqueTokens\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToken(string,uint256)\":{\"params\":{\"tokenURI\":\"the URI of the new token to be added\"}},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(string,address,address,uint256)\":{\"params\":{\"_baseURI\":\"the base URI to initliaze the contract with - will not be shown to users\",\"_defaultPrice\":\"the default price if none has been defined for a specific tokenID\",\"_mitchToken\":\"this is the address of the Mitch Token which is minted to the NFT minter for every NFT they mint\",\"_paymentToken\":\"this is the token that will be used to buy NFTs when nativeMintEnabled is false\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256)\":{\"params\":{\"amount\":\"the amount of NFTs to mint\",\"id\":\"The token ID of the mint to be minted\",\"to\":\"the address to mint the NFTs to\"}},\"mintBatch(address,uint256[],uint256[])\":{\"params\":{\"amounts\":\"an array of the amount of each corresponding NFT by tokenID to be minted\",\"ids\":\"an array of the token IDs of the NFTs to be minted\",\"to\":\"the address to mint the NFTs to\"}},\"mintBatchWithNativeToken(address,uint256[],uint256[])\":{\"params\":{\"amounts\":\"an array of the amount of each corresponding NFT by tokenID to be minted\",\"ids\":\"an array of the token IDs of the NFTs to be minted\",\"to\":\"the address to mint the NFTs to\"}},\"mintWithNativeToken(address,uint256,uint256)\":{\"params\":{\"amount\":\"the amount of NFTs to mint\",\"id\":\"The token ID of the mint to be minted\",\"to\":\"the address to mint the NFTs to\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"resetTokenPrice(uint256)\":{\"params\":{\"tokenId\":\"the token id of the NFT\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setDefaultPrice(uint256)\":{\"params\":{\"price\":\"the price of the NFT per unit\"}},\"setNativeTokenMinting(bool)\":{\"params\":{\"enabled\":\"true if the minter pays with native tokens, false if the minter pays with the payment token\"}},\"setPaymentToken(address)\":{\"params\":{\"newPaymentToken\":\"the address of the new ERC20 compatible token\"}},\"setTokenPrice(uint256,uint256)\":{\"params\":{\"price\":\"the price of the NFT per unit\",\"tokenId\":\"the token id of the NFT\"}},\"setTokenURI(uint256,string)\":{\"params\":{\"tokenId\":\"the token id of the NFT\",\"tokenURI\":\"the new URI of the NFT\"}},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"params\":{\"tokenId\":\"the token id of the NFT\"},\"returns\":{\"_0\":\"uri URI for a given token ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(string,uint256)\":{\"notice\":\"this will add a new token to the collection, starts with default price, only callable by owner\"},\"getTokenInfo(uint256)\":{\"notice\":\"this will return the price and URI of a specific NFT by its token ID\"},\"initialize(string,address,address,uint256)\":{\"notice\":\"This is the basic initliazation function for the contract\"},\"mint(address,uint256,uint256)\":{\"notice\":\"mint NFTs with payment token\"},\"mintBatch(address,uint256[],uint256[])\":{\"notice\":\"This will mint multiple NFTS with different ids and amounts to an address using the payment token\"},\"mintBatchWithNativeToken(address,uint256[],uint256[])\":{\"notice\":\"This will mint multiple NFTS with different ids and amounts to an address using the network native token as payment\"},\"mintWithNativeToken(address,uint256,uint256)\":{\"notice\":\"mint NFTs with the network native token\"},\"resetTokenPrice(uint256)\":{\"notice\":\"this will reset the price of an NFT that has been given a specific price back to the default price, only callable by owner\"},\"setDefaultPrice(uint256)\":{\"notice\":\"this will set the price of all NFTs that do not have a price set, only callable by owner\"},\"setNativeTokenMinting(bool)\":{\"notice\":\"sets if the minter pays for NFTs with native tokens or the payment token, only callable by owner\"},\"setPaymentToken(address)\":{\"notice\":\"this will change the address of the ERC20 compatible token used for payment of NFTs, only callable by owner\"},\"setTokenPrice(uint256,uint256)\":{\"notice\":\"This will set the price of a specific NFT by its token ID, only callable by owner\"},\"setTokenURI(uint256,string)\":{\"notice\":\"this will change the URI of a specific NFT by tokenID, only callable by owner\"},\"withdrawNativeToken()\":{\"notice\":\"withdraws the whole balance of network native tokens in the contract to the owner address, only callable by owner\"},\"withdrawTokens()\":{\"notice\":\"withdraws the whole balance of payment tokens in the contract to the owner address, only callable by owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MitchMinterSupplyUpgradeable.sol\":\"MitchMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"contracts/MitchMinterSupplyUpgradeable.sol\":{\"keccak256\":\"0x432f1b1ff44f243c8d2b835fa8e72a1b94353ecbb8558fba2d1abac525d1d3fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c11245d44406a076ef799a29ee5bf70c27f15619ee781dfb3b0b6c777a982b7\",\"dweb:/ipfs/Qmd11YLTUdnyy1LDE92c3xM5eVvdCDEBFfZQQ6cyCcKd6b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xc3e465e1fdd0e491688ad75ef1b946e1680e7f9f78bf5beeefd6daed8693c856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeeca7e860afd73ce8f694de1696a5150ef5b94c9877661fc2db7283446fccb7\",\"dweb:/ipfs/QmdbxAah67ohhR8ZEdFfDcVRAeFJ6JaGb49r6aiAQ54nTe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol\":{\"keccak256\":\"0x048a492eee88c80ecc0354486e8e0ab99490b44a6fb28833b3cfb45d573f18d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4784249720c8ce8a9eaaf148a8cbe19484897f5b2774cd812f618acc51482b98\",\"dweb:/ipfs/QmbDqi3H1rhmbHFnnZq5VMxtSXHWUQtjnsFsksg6mc1otm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"keccak256\":\"0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a158fa95bbb45b9c64930c811108c15ff6303a13e170fc13666c3bdd660ec2b8\",\"dweb:/ipfs/Qmepwqn4jtoQCmvgSK9HVRiWmyvdHdEMg7eqGVwSVVsscc\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol\":{\"keccak256\":\"0x9a1218747a17239e2fcab2efc14099379387f114c7ad22c69a23b7d67ec0eaa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eec66b0f255e61101cc9921a6499e23799ffc21ff861f5fce44a5adf9dd5ed27\",\"dweb:/ipfs/Qmckcr6QfTeoSh4t1uLNYHQYPKJhQV6NysSQLGBMGw3E3R\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NoTokenExists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalAmounts",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "finalPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "URI_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "contract IERC20",
              "name": "_paymentToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_mitchToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_defaultPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokenSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintBatchWithNativeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithNativeToken"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mitchToken",
          "outputs": [
            {
              "internalType": "contract IMitchToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeMintEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paymentToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetTokenPrice"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultPrice"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNativeTokenMinting"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "newPaymentToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaymentToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenPrice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniqueTokens",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawNativeToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addToken(string,uint256)": {
            "params": {
              "tokenURI": "the URI of the new token to be added"
            }
          },
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "exists(uint256)": {
            "details": "Indicates whether any token exist with a given id, or not."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(string,address,address,uint256)": {
            "params": {
              "_baseURI": "the base URI to initliaze the contract with - will not be shown to users",
              "_defaultPrice": "the default price if none has been defined for a specific tokenID",
              "_mitchToken": "this is the address of the Mitch Token which is minted to the NFT minter for every NFT they mint",
              "_paymentToken": "this is the token that will be used to buy NFTs when nativeMintEnabled is false"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "mint(address,uint256,uint256)": {
            "params": {
              "amount": "the amount of NFTs to mint",
              "id": "The token ID of the mint to be minted",
              "to": "the address to mint the NFTs to"
            }
          },
          "mintBatch(address,uint256[],uint256[])": {
            "params": {
              "amounts": "an array of the amount of each corresponding NFT by tokenID to be minted",
              "ids": "an array of the token IDs of the NFTs to be minted",
              "to": "the address to mint the NFTs to"
            }
          },
          "mintBatchWithNativeToken(address,uint256[],uint256[])": {
            "params": {
              "amounts": "an array of the amount of each corresponding NFT by tokenID to be minted",
              "ids": "an array of the token IDs of the NFTs to be minted",
              "to": "the address to mint the NFTs to"
            }
          },
          "mintWithNativeToken(address,uint256,uint256)": {
            "params": {
              "amount": "the amount of NFTs to mint",
              "id": "The token ID of the mint to be minted",
              "to": "the address to mint the NFTs to"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "resetTokenPrice(uint256)": {
            "params": {
              "tokenId": "the token id of the NFT"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setDefaultPrice(uint256)": {
            "params": {
              "price": "the price of the NFT per unit"
            }
          },
          "setNativeTokenMinting(bool)": {
            "params": {
              "enabled": "true if the minter pays with native tokens, false if the minter pays with the payment token"
            }
          },
          "setPaymentToken(address)": {
            "params": {
              "newPaymentToken": "the address of the new ERC20 compatible token"
            }
          },
          "setTokenPrice(uint256,uint256)": {
            "params": {
              "price": "the price of the NFT per unit",
              "tokenId": "the token id of the NFT"
            }
          },
          "setTokenURI(uint256,string)": {
            "params": {
              "tokenId": "the token id of the NFT",
              "tokenURI": "the new URI of the NFT"
            }
          },
          "totalSupply(uint256)": {
            "details": "Total amount of tokens in with a given id."
          },
          "uri(uint256)": {
            "params": {
              "tokenId": "the token id of the NFT"
            },
            "returns": {
              "_0": "uri URI for a given token ID"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addToken(string,uint256)": {
            "notice": "this will add a new token to the collection, starts with default price, only callable by owner"
          },
          "getTokenInfo(uint256)": {
            "notice": "this will return the price and URI of a specific NFT by its token ID"
          },
          "initialize(string,address,address,uint256)": {
            "notice": "This is the basic initliazation function for the contract"
          },
          "mint(address,uint256,uint256)": {
            "notice": "mint NFTs with payment token"
          },
          "mintBatch(address,uint256[],uint256[])": {
            "notice": "This will mint multiple NFTS with different ids and amounts to an address using the payment token"
          },
          "mintBatchWithNativeToken(address,uint256[],uint256[])": {
            "notice": "This will mint multiple NFTS with different ids and amounts to an address using the network native token as payment"
          },
          "mintWithNativeToken(address,uint256,uint256)": {
            "notice": "mint NFTs with the network native token"
          },
          "resetTokenPrice(uint256)": {
            "notice": "this will reset the price of an NFT that has been given a specific price back to the default price, only callable by owner"
          },
          "setDefaultPrice(uint256)": {
            "notice": "this will set the price of all NFTs that do not have a price set, only callable by owner"
          },
          "setNativeTokenMinting(bool)": {
            "notice": "sets if the minter pays for NFTs with native tokens or the payment token, only callable by owner"
          },
          "setPaymentToken(address)": {
            "notice": "this will change the address of the ERC20 compatible token used for payment of NFTs, only callable by owner"
          },
          "setTokenPrice(uint256,uint256)": {
            "notice": "This will set the price of a specific NFT by its token ID, only callable by owner"
          },
          "setTokenURI(uint256,string)": {
            "notice": "this will change the URI of a specific NFT by tokenID, only callable by owner"
          },
          "withdrawNativeToken()": {
            "notice": "withdraws the whole balance of network native tokens in the contract to the owner address, only callable by owner"
          },
          "withdrawTokens()": {
            "notice": "withdraws the whole balance of payment tokens in the contract to the owner address, only callable by owner"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/MitchMinterSupplyUpgradeable.sol": "MitchMinter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/MitchMinterSupplyUpgradeable.sol": {
        "keccak256": "0x432f1b1ff44f243c8d2b835fa8e72a1b94353ecbb8558fba2d1abac525d1d3fd",
        "urls": [
          "bzz-raw://7c11245d44406a076ef799a29ee5bf70c27f15619ee781dfb3b0b6c777a982b7",
          "dweb:/ipfs/Qmd11YLTUdnyy1LDE92c3xM5eVvdCDEBFfZQQ6cyCcKd6b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
        "keccak256": "0xc3e465e1fdd0e491688ad75ef1b946e1680e7f9f78bf5beeefd6daed8693c856",
        "urls": [
          "bzz-raw://aeeca7e860afd73ce8f694de1696a5150ef5b94c9877661fc2db7283446fccb7",
          "dweb:/ipfs/QmdbxAah67ohhR8ZEdFfDcVRAeFJ6JaGb49r6aiAQ54nTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8",
        "urls": [
          "bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83",
          "dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol": {
        "keccak256": "0x048a492eee88c80ecc0354486e8e0ab99490b44a6fb28833b3cfb45d573f18d7",
        "urls": [
          "bzz-raw://4784249720c8ce8a9eaaf148a8cbe19484897f5b2774cd812f618acc51482b98",
          "dweb:/ipfs/QmbDqi3H1rhmbHFnnZq5VMxtSXHWUQtjnsFsksg6mc1otm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol": {
        "keccak256": "0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e",
        "urls": [
          "bzz-raw://a158fa95bbb45b9c64930c811108c15ff6303a13e170fc13666c3bdd660ec2b8",
          "dweb:/ipfs/Qmepwqn4jtoQCmvgSK9HVRiWmyvdHdEMg7eqGVwSVVsscc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol": {
        "keccak256": "0x9a1218747a17239e2fcab2efc14099379387f114c7ad22c69a23b7d67ec0eaa2",
        "urls": [
          "bzz-raw://eec66b0f255e61101cc9921a6499e23799ffc21ff861f5fce44a5adf9dd5ed27",
          "dweb:/ipfs/Qmckcr6QfTeoSh4t1uLNYHQYPKJhQV6NysSQLGBMGw3E3R"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
        "keccak256": "0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448",
        "urls": [
          "bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9",
          "dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/MitchMinterSupplyUpgradeable.sol",
    "id": 889,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        27847
      ],
      "Address": [
        36552
      ],
      "AddressUpgradeable": [
        30222
      ],
      "ContextUpgradeable": [
        30264
      ],
      "ERC1155BurnableUpgradeable": [
        29586
      ],
      "ERC1155SupplyUpgradeable": [
        29763
      ],
      "ERC1155URIStorageUpgradeable": [
        29877
      ],
      "ERC1155Upgradeable": [
        29334
      ],
      "ERC165Upgradeable": [
        30537
      ],
      "IAccessControlUpgradeable": [
        27920
      ],
      "IERC1155MetadataURIUpgradeable": [
        29892
      ],
      "IERC1155ReceiverUpgradeable": [
        29375
      ],
      "IERC1155Upgradeable": [
        29497
      ],
      "IERC165Upgradeable": [
        30549
      ],
      "IERC20": [
        33476
      ],
      "IERC20Permit": [
        34450
      ],
      "IMitchToken": [
        17
      ],
      "Initializable": [
        28089
      ],
      "MathUpgradeable": [
        31415
      ],
      "MitchMinter": [
        888
      ],
      "SafeERC20": [
        34731
      ],
      "SafeMath": [
        40152
      ],
      "SignedMathUpgradeable": [
        31520
      ],
      "StringsUpgradeable": [
        30493
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11875:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "58:92:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 29335,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "151:91:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 27848,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "243:111:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 29587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "355:109:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 29764,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "465:113:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 29878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "579:85:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 28090,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "665:65:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 34732,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "731:57:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 889,
        "sourceUnit": 40153,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 17,
        "nodeType": "ContractDefinition",
        "src": "790:81:0",
        "nodes": [
          {
            "id": 16,
            "nodeType": "FunctionDefinition",
            "src": "818:51:0",
            "nodes": [],
            "functionSelector": "40c10f19",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "827:4:0",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "840:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "832:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "852:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "844:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:28:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:0"
            },
            "scope": 17,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMitchToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          17
        ],
        "name": "IMitchToken",
        "nameLocation": "800:11:0",
        "scope": 889,
        "usedErrors": []
      },
      {
        "id": 888,
        "nodeType": "ContractDefinition",
        "src": "876:11030:0",
        "nodes": [
          {
            "id": 29,
            "nodeType": "UsingForDirective",
            "src": "1015:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26,
              "name": "SafeERC20",
              "nameLocations": [
                "1021:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34731,
              "src": "1021:9:0"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nameLocations": [
                  "1035:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33476,
                "src": "1035:6:0"
              },
              "referencedDeclaration": 33476,
              "src": "1035:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$33476",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 32,
            "nodeType": "UsingForDirective",
            "src": "1047:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 30,
              "name": "SafeMath",
              "nameLocations": [
                "1053:8:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40152,
              "src": "1053:8:0"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 36,
            "nodeType": "ErrorDefinition",
            "src": "1080:37:0",
            "nodes": [],
            "errorSelector": "cfe3beb9",
            "name": "NoTokenExists",
            "nameLocation": "1086:13:0",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1108:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "1100:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:17:0"
            }
          },
          {
            "id": 46,
            "nodeType": "EventDefinition",
            "src": "1123:83:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb",
            "name": "Mint",
            "nameLocation": "1129:4:0",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1142:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1134:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1161:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1153:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1178:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1170:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalPrice",
                  "nameLocation": "1194:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1186:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:72:0"
            }
          },
          {
            "id": 54,
            "nodeType": "EventDefinition",
            "src": "1211:77:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6941bbed9891bfb7a243f6a1aa237a060996652ebf3e8f33bb36a0022e60dfbf",
            "name": "MintBatch",
            "nameLocation": "1217:9:0",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1235:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1227:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmounts",
                  "nameLocation": "1254:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1246:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalPrice",
                  "nameLocation": "1276:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1268:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:61:0"
            }
          },
          {
            "id": 60,
            "nodeType": "EventDefinition",
            "src": "1293:52:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
            "name": "Withdrawal",
            "nameLocation": "1299:10:0",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1318:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1310:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1337:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1329:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1309:35:0"
            }
          },
          {
            "id": 62,
            "nodeType": "VariableDeclaration",
            "src": "1351:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "0b70ede5",
            "mutability": "mutable",
            "name": "nativeMintEnabled",
            "nameLocation": "1363:17:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 61,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1351:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 65,
            "nodeType": "VariableDeclaration",
            "src": "1386:26:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "3013ce29",
            "mutability": "mutable",
            "name": "paymentToken",
            "nameLocation": "1400:12:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$33476",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 64,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63,
                "name": "IERC20",
                "nameLocations": [
                  "1386:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33476,
                "src": "1386:6:0"
              },
              "referencedDeclaration": 33476,
              "src": "1386:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$33476",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 68,
            "nodeType": "VariableDeclaration",
            "src": "1418:30:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "30e8fd65",
            "mutability": "mutable",
            "name": "uniqueTokens",
            "nameLocation": "1432:12:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 66,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "1418:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1447:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 71,
            "nodeType": "VariableDeclaration",
            "src": "1454:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "ea49b1cc",
            "mutability": "mutable",
            "name": "mitchToken",
            "nameLocation": "1473:10:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMitchToken_$17",
              "typeString": "contract IMitchToken"
            },
            "typeName": {
              "id": 70,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69,
                "name": "IMitchToken",
                "nameLocations": [
                  "1454:11:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17,
                "src": "1454:11:0"
              },
              "referencedDeclaration": 17,
              "src": "1454:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMitchToken_$17",
                "typeString": "contract IMitchToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73,
            "nodeType": "VariableDeclaration",
            "src": "1489:14:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1496:7:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 72,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1489:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 75,
            "nodeType": "VariableDeclaration",
            "src": "1509:20:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "defaultPrice",
            "nameLocation": "1517:12:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1509:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 77,
            "nodeType": "VariableDeclaration",
            "src": "1535:20:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1550:5:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1535:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82,
            "nodeType": "VariableDeclaration",
            "src": "1562:70:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "7f345710",
            "mutability": "constant",
            "name": "URI_SETTER_ROLE",
            "nameLocation": "1586:15:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 78,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1562:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5552495f5345545445525f524f4c45",
                  "id": 80,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1614:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c",
                    "typeString": "literal_string \"URI_SETTER_ROLE\""
                  },
                  "value": "URI_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c",
                    "typeString": "literal_string \"URI_SETTER_ROLE\""
                  }
                ],
                "id": 79,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1604:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 81,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1604:28:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87,
            "nodeType": "VariableDeclaration",
            "src": "1638:62:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1662:11:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 83,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1638:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 85,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1686:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 84,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1676:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1676:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91,
            "nodeType": "VariableDeclaration",
            "src": "1707:45:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d4ddce8a",
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "1742:10:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 90,
              "keyType": {
                "id": 88,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1715:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1707:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 89,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1726:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 95,
            "nodeType": "VariableDeclaration",
            "src": "1758:49:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "36f5cba5",
            "mutability": "mutable",
            "name": "maxTokenSupply",
            "nameLocation": "1793:14:0",
            "scope": 888,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 94,
              "keyType": {
                "id": 92,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1766:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1758:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 93,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1777:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 102,
            "nodeType": "FunctionDefinition",
            "src": "1814:52:0",
            "nodes": [],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1828:38:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28070,
                      "src": "1837:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:22:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 176,
            "nodeType": "FunctionDefinition",
            "src": "2364:638:0",
            "nodes": [],
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2493:509:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2518:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 117,
                      "name": "__ERC1155_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28139,
                      "src": "2503:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:24:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 121,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27533,
                      "src": "2537:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:22:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 124,
                      "name": "__ERC1155Burnable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29512,
                      "src": "2569:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:24:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 127,
                      "name": "__ERC1155Supply_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29601,
                      "src": "2603:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:22:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 130,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 131,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2646:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2636:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:18:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "paymentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2664:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$33476",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 135,
                      "name": "_paymentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "2679:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$33476",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2664:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$33476",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2664:28:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "defaultPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "2702:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 139,
                      "name": "_defaultPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "2717:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2702:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:28:0"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "mitchToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2740:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMitchToken_$17",
                        "typeString": "contract IMitchToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 144,
                          "name": "_mitchToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "2765:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 143,
                        "name": "IMitchToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2753:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMitchToken_$17_$",
                          "typeString": "type(contract IMitchToken)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2753:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMitchToken_$17",
                        "typeString": "contract IMitchToken"
                      }
                    },
                    "src": "2740:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMitchToken_$17",
                      "typeString": "contract IMitchToken"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2740:37:0"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "nativeMintEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2787:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2807:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2787:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:24:0"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2821:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2829:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2833:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2829:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2821:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27554,
                        "src": "2870:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 159,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2890:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2894:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2890:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 157,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27810,
                      "src": "2859:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 164,
                        "name": "URI_SETTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "2922:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2939:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2943:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2939:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 163,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27810,
                      "src": "2911:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 170,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2971:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2984:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2988:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2984:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 169,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27810,
                      "src": "2960:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2960:35:0"
                }
              ]
            },
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1872:486:0",
              "text": "This is the basic initliazation function for the contract\n @param _baseURI the base URI to initliaze the contract with - will not be shown to users\n @param _paymentToken this is the token that will be used to buy NFTs when nativeMintEnabled is false\n @param _mitchToken this is the address of the Mitch Token which is minted to the NFT minter for every NFT they mint\n @param _defaultPrice the default price if none has been defined for a specific tokenID"
            },
            "functionSelector": "7ff7e616",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 114,
                  "name": "initializer",
                  "nameLocations": [
                    "2474:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27991,
                  "src": "2474:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2474:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "2373:10:0",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2398:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2384:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_paymentToken",
                  "nameLocation": "2415:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2408:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$33476",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 106,
                      "name": "IERC20",
                      "nameLocations": [
                        "2408:6:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33476,
                      "src": "2408:6:0"
                    },
                    "referencedDeclaration": 33476,
                    "src": "2408:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$33476",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_mitchToken",
                  "nameLocation": "2438:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2430:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_defaultPrice",
                  "nameLocation": "2459:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2451:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2383:90:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 295,
            "nodeType": "FunctionDefinition",
            "src": "3010:890:0",
            "nodes": [],
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "3110:790:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "3128:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3120:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3120:18:0"
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "unitPrice",
                      "nameLocation": "3156:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3148:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3148:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 194,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3148:17:0"
                },
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "currentSupply",
                      "nameLocation": "3183:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3175:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3175:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3211:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29624,
                      "src": "3199:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3175:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 202,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "3232:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3241:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3232:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e6e6f742062652030",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3244:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9aa4ed781649192bc880eeb7962e23c83a3bf11b35472739b2f70d738d8c1367",
                          "typeString": "literal_string \"Amount cannot be 0\""
                        },
                        "value": "Amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9aa4ed781649192bc880eeb7962e23c83a3bf11b35472739b2f70d738d8c1367",
                          "typeString": "literal_string \"Amount cannot be 0\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3224:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 209,
                            "name": "currentSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3283:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 210,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "3299:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3283:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 212,
                            "name": "maxTokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "3309:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "id": 213,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "3324:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3309:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3283:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420657863656564204d617820537570706c79",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3329:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccdff5d8ab48a1e8bf22e0605aabe11b5d8f4f576c4f9453391221d8646ca3e9",
                          "typeString": "literal_string \"Cannot exceed Max Supply\""
                        },
                        "value": "Cannot exceed Max Supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccdff5d8ab48a1e8bf22e0605aabe11b5d8f4f576c4f9453391221d8646ca3e9",
                          "typeString": "literal_string \"Cannot exceed Max Supply\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3275:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3275:81:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3371:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3375:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3371:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 221,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "3385:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3371:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "nodeType": "IfStatement",
                  "src": "3367:442:0",
                  "trueBody": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "3392:417:0",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 223,
                                "name": "tokenPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "3406:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 225,
                              "indexExpression": {
                                "id": 224,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 180,
                                "src": "3417:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3406:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3424:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3406:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 231,
                              "name": "unitPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3455:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "baseExpression": {
                                "id": 232,
                                "name": "tokenPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "3467:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 234,
                              "indexExpression": {
                                "id": 233,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 180,
                                "src": "3478:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3467:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3455:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3406:75:0",
                          "trueExpression": {
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 228,
                              "name": "unitPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3428:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 229,
                              "name": "defaultPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3440:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3428:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "3406:75:0"
                      },
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 238,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3495:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 241,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "3522:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 239,
                                "name": "unitPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "3508:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3518:3:0",
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40046,
                              "src": "3508:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3508:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3495:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:34:0"
                      },
                      {
                        "condition": {
                          "id": 245,
                          "name": "isNative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "3547:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 266,
                          "nodeType": "Block",
                          "src": "3647:101:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 257,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3695:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3699:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3695:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 261,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3715:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MitchMinter_$888",
                                          "typeString": "contract MitchMinter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_MitchMinter_$888",
                                          "typeString": "contract MitchMinter"
                                        }
                                      ],
                                      "id": 260,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3707:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 259,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3707:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 262,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3707:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 263,
                                    "name": "totalPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 190,
                                    "src": "3722:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 254,
                                    "name": "paymentToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "3665:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$33476",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3678:16:0",
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34508,
                                  "src": "3665:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$33476_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$33476_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3665:68:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 265,
                              "nodeType": "ExpressionStatement",
                              "src": "3665:68:0"
                            }
                          ]
                        },
                        "id": 267,
                        "nodeType": "IfStatement",
                        "src": "3543:205:0",
                        "trueBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "3557:84:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 249,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 247,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 184,
                                      "src": "3583:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 248,
                                      "name": "totalPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 190,
                                      "src": "3592:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3583:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742066756e647321",
                                    "id": 250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3604:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                                      "typeString": "literal_string \"Insufficient funds!\""
                                    },
                                    "value": "Insufficient funds!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                                      "typeString": "literal_string \"Insufficient funds!\""
                                    }
                                  ],
                                  "id": 246,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3575:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3575:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 252,
                              "nodeType": "ExpressionStatement",
                              "src": "3575:51:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 269,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "3771:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 270,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "3775:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 271,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "3779:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 272,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3787:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 268,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "3766:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3766:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "EmitStatement",
                        "src": "3761:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 280,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3834:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3849:7:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 281,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "3838:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3845:3:0",
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40046,
                          "src": "3838:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3838:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 277,
                        "name": "mitchToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "3818:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMitchToken_$17",
                          "typeString": "contract IMitchToken"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3829:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3818:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3874:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 289,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3878:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 290,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3882:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3890:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 287,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28763,
                      "src": "3868:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:25:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleMint",
            "nameLocation": "3019:11:0",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3039:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3031:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3051:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3043:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3063:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3055:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3055:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3079:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3071:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "isNative",
                  "nameLocation": "3091:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3086:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3086:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:70:0"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 329,
            "nodeType": "FunctionDefinition",
            "src": "4098:282:0",
            "nodes": [],
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "4161:219:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 305,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "4175:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 306,
                      "name": "uniqueTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4180:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "4175:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "4171:72:0",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "4194:49:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 309,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "4229:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 308,
                            "name": "NoTokenExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4215:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4215:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "RevertStatement",
                        "src": "4208:24:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4260:18:0",
                        "subExpression": {
                          "id": 315,
                          "name": "nativeMintEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "4261:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4280:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053e24a071e1c970f51b32991cc41ca7e2025b7f4d2ea3e18be2543e7ef41c15",
                          "typeString": "literal_string \"Can only mint with native token\""
                        },
                        "value": "Can only mint with native token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053e24a071e1c970f51b32991cc41ca7e2025b7f4d2ea3e18be2543e7ef41c15",
                          "typeString": "literal_string \"Can only mint with native token\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4252:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "4252:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 321,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "4336:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 322,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4340:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 323,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "4344:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4352:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 325,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4355:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 320,
                      "name": "_handleMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "4324:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:49:0"
                }
              ]
            },
            "documentation": {
              "id": 296,
              "nodeType": "StructuredDocumentation",
              "src": "3906:187:0",
              "text": "mint NFTs with payment token\n @param to the address to mint the NFTs to\n @param id The token ID of the mint to be minted\n @param amount the amount of NFTs to mint"
            },
            "functionSelector": "156e29f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "4107:4:0",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4120:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "4112:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4132:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "4124:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4124:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4144:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "4136:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4111:40:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4161:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 363,
            "nodeType": "FunctionDefinition",
            "src": "4589:311:0",
            "nodes": [],
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "4675:225:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 339,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "4689:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 340,
                      "name": "uniqueTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4694:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "4689:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "4685:72:0",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "4708:49:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 343,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "4743:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 342,
                            "name": "NoTokenExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4729:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4729:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 345,
                        "nodeType": "RevertStatement",
                        "src": "4722:24:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 349,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4774:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c79206d696e74207769746820657263323020746f6b656e",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4793:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fc5938aa51faf6f09546d375250e7339e05aeb8dd67f885784fd022e3d48702",
                          "typeString": "literal_string \"Can only mint with erc20 token\""
                        },
                        "value": "Can only mint with erc20 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fc5938aa51faf6f09546d375250e7339e05aeb8dd67f885784fd022e3d48702",
                          "typeString": "literal_string \"Can only mint with erc20 token\""
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4766:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "4766:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "4848:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "4852:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 356,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "4856:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 357,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4864:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4868:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4864:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 359,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4875:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 353,
                      "name": "_handleMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "4836:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:57:0"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "4386:198:0",
              "text": "mint NFTs with the network native token\n @param to the address to mint the NFTs to\n @param id The token ID of the mint to be minted\n @param amount the amount of NFTs to mint"
            },
            "functionSelector": "5a8f7b86",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithNativeToken",
            "nameLocation": "4598:19:0",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4626:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4618:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4638:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4630:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4650:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4642:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4617:40:0"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4675:0:0"
            },
            "scope": 888,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 533,
            "nodeType": "FunctionDefinition",
            "src": "4906:1210:0",
            "nodes": [],
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "5031:1085:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "finalPrice",
                      "nameLocation": "5045:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 532,
                      "src": "5037:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5037:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 380,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5037:18:0"
                },
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nameLocation": "5069:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 532,
                      "src": "5061:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5061:19:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 384,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5090:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5094:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5090:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 386,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "5104:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5090:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 514,
                  "nodeType": "IfStatement",
                  "src": "5086:939:0",
                  "trueBody": {
                    "id": 513,
                    "nodeType": "Block",
                    "src": "5111:914:0",
                    "statements": [
                      {
                        "body": {
                          "id": 482,
                          "nodeType": "Block",
                          "src": "5158:610:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 397,
                                        "name": "amounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "5180:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 399,
                                      "indexExpression": {
                                        "id": 398,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 389,
                                        "src": "5188:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5180:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 400,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5193:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5180:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "416d6f756e742063616e6e6f742062652030",
                                    "id": 402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5196:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9aa4ed781649192bc880eeb7962e23c83a3bf11b35472739b2f70d738d8c1367",
                                      "typeString": "literal_string \"Amount cannot be 0\""
                                    },
                                    "value": "Amount cannot be 0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9aa4ed781649192bc880eeb7962e23c83a3bf11b35472739b2f70d738d8c1367",
                                      "typeString": "literal_string \"Amount cannot be 0\""
                                    }
                                  ],
                                  "id": 396,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5172:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5172:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 404,
                              "nodeType": "ExpressionStatement",
                              "src": "5172:45:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 405,
                                    "name": "ids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "5235:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 407,
                                  "indexExpression": {
                                    "id": 406,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 389,
                                    "src": "5239:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5235:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 408,
                                  "name": "uniqueTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "5244:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "5235:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 417,
                              "nodeType": "IfStatement",
                              "src": "5231:88:0",
                              "trueBody": {
                                "id": 416,
                                "nodeType": "Block",
                                "src": "5258:61:0",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 411,
                                            "name": "ids",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "5297:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 413,
                                          "indexExpression": {
                                            "id": 412,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 389,
                                            "src": "5301:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5297:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 410,
                                        "name": "NoTokenExists",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 36,
                                        "src": "5283:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) pure"
                                        }
                                      },
                                      "id": 414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5283:21:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 415,
                                    "nodeType": "RevertStatement",
                                    "src": "5276:28:0"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                419
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 419,
                                  "mutability": "mutable",
                                  "name": "currentSupply",
                                  "nameLocation": "5340:13:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 482,
                                  "src": "5332:21:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 418,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5332:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 425,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 421,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "5368:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 423,
                                    "indexExpression": {
                                      "id": 422,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 389,
                                      "src": "5372:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5368:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 420,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29624,
                                  "src": "5356:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5356:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5332:43:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 427,
                                        "name": "currentSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "5397:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 428,
                                          "name": "amounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 371,
                                          "src": "5413:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 430,
                                        "indexExpression": {
                                          "id": 429,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 389,
                                          "src": "5421:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5413:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5397:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 432,
                                        "name": "maxTokenSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "5427:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 436,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 433,
                                          "name": "ids",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 368,
                                          "src": "5442:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 435,
                                        "indexExpression": {
                                          "id": 434,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 389,
                                          "src": "5446:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5442:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5427:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5397:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "43616e6e6f7420657863656564204d617820537570706c79",
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5451:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ccdff5d8ab48a1e8bf22e0605aabe11b5d8f4f576c4f9453391221d8646ca3e9",
                                      "typeString": "literal_string \"Cannot exceed Max Supply\""
                                    },
                                    "value": "Cannot exceed Max Supply"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ccdff5d8ab48a1e8bf22e0605aabe11b5d8f4f576c4f9453391221d8646ca3e9",
                                      "typeString": "literal_string \"Cannot exceed Max Supply\""
                                    }
                                  ],
                                  "id": 426,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5389:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5389:89:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 440,
                              "nodeType": "ExpressionStatement",
                              "src": "5389:89:0"
                            },
                            {
                              "assignments": [
                                442
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 442,
                                  "mutability": "mutable",
                                  "name": "unitPrice",
                                  "nameLocation": "5500:9:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 482,
                                  "src": "5492:17:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 441,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5492:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 443,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5492:17:0"
                            },
                            {
                              "expression": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 444,
                                      "name": "tokenPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "5523:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 448,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 445,
                                        "name": "ids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 368,
                                        "src": "5534:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 447,
                                      "indexExpression": {
                                        "id": 446,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 389,
                                        "src": "5538:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5534:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5523:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5545:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5523:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 454,
                                    "name": "unitPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "5576:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 455,
                                      "name": "tokenPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "5588:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 459,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 456,
                                        "name": "ids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 368,
                                        "src": "5599:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 458,
                                      "indexExpression": {
                                        "id": 457,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 389,
                                        "src": "5603:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5599:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5588:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5576:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5523:83:0",
                                "trueExpression": {
                                  "id": 453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 451,
                                    "name": "unitPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "5549:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 452,
                                    "name": "defaultPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75,
                                    "src": "5561:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5549:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 462,
                              "nodeType": "ExpressionStatement",
                              "src": "5523:83:0"
                            },
                            {
                              "expression": {
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 463,
                                  "name": "finalPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 379,
                                  "src": "5620:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 466,
                                        "name": "amounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "5648:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 468,
                                      "indexExpression": {
                                        "id": 467,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 389,
                                        "src": "5656:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5648:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 464,
                                      "name": "unitPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 442,
                                      "src": "5634:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5644:3:0",
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40046,
                                    "src": "5634:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5634:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5620:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 471,
                              "nodeType": "ExpressionStatement",
                              "src": "5620:39:0"
                            },
                            {
                              "expression": {
                                "id": 476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 472,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 382,
                                  "src": "5673:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 473,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 371,
                                    "src": "5688:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 475,
                                  "indexExpression": {
                                    "id": 474,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 389,
                                    "src": "5696:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5688:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5673:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 477,
                              "nodeType": "ExpressionStatement",
                              "src": "5673:25:0"
                            },
                            {
                              "id": 481,
                              "nodeType": "UncheckedBlock",
                              "src": "5712:46:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 479,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "5740:3:0",
                                    "subExpression": {
                                      "id": 478,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 389,
                                      "src": "5740:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 480,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5740:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 392,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "5141:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 393,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "5145:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5149:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5145:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5141:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 483,
                        "initializationExpression": {
                          "assignments": [
                            389
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 389,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5134:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 483,
                              "src": "5126:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 388,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5126:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 391,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5138:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5126:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5121:647:0"
                      },
                      {
                        "condition": {
                          "id": 484,
                          "name": "isNative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5781:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5873:93:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 496,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5917:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5921:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5917:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 500,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5937:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MitchMinter_$888",
                                          "typeString": "contract MitchMinter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_MitchMinter_$888",
                                          "typeString": "contract MitchMinter"
                                        }
                                      ],
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5929:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 498,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5929:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5929:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 502,
                                    "name": "finalPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 379,
                                    "src": "5944:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 493,
                                    "name": "paymentToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5887:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$33476",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5900:16:0",
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34508,
                                  "src": "5887:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$33476_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$33476_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5887:68:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 504,
                              "nodeType": "ExpressionStatement",
                              "src": "5887:68:0"
                            }
                          ]
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5777:189:0",
                        "trueBody": {
                          "id": 492,
                          "nodeType": "Block",
                          "src": "5791:76:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 486,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "5813:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 487,
                                      "name": "finalPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 379,
                                      "src": "5822:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5813:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742066756e647321",
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5834:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                                      "typeString": "literal_string \"Insufficient funds!\""
                                    },
                                    "value": "Insufficient funds!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                                      "typeString": "literal_string \"Insufficient funds!\""
                                    }
                                  ],
                                  "id": 485,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5805:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5805:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 491,
                              "nodeType": "ExpressionStatement",
                              "src": "5805:51:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 508,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 365,
                              "src": "5990:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 509,
                              "name": "totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "5994:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 510,
                              "name": "finalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "6007:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 507,
                            "name": "MintBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "5980:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5980:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 512,
                        "nodeType": "EmitStatement",
                        "src": "5975:43:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 518,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "6046:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6066:7:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 519,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "6050:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6062:3:0",
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40046,
                          "src": "6050:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6050:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 515,
                        "name": "mitchToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "6030:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMitchToken_$17",
                          "typeString": "contract IMitchToken"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6041:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "6030:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6030:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "6030:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 526,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "6092:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "6096:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 528,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "6101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6110:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 525,
                      "name": "_mintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28874,
                      "src": "6081:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6081:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "6081:32:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleMintBatch",
            "nameLocation": "4915:16:0",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4940:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "4932:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4932:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4961:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "4944:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 366,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4944:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 367,
                    "nodeType": "ArrayTypeName",
                    "src": "4944:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4983:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "4966:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 369,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4966:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 370,
                    "nodeType": "ArrayTypeName",
                    "src": "4966:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5000:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "4992:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "isNative",
                  "nameLocation": "5012:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "5007:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4931:90:0"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5031:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 560,
            "nodeType": "FunctionDefinition",
            "src": "6458:233:0",
            "nodes": [],
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "6546:145:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6564:18:0",
                        "subExpression": {
                          "id": 546,
                          "name": "nativeMintEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "6565:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c79206d696e742077697468206e617469766520746f6b656e",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6584:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053e24a071e1c970f51b32991cc41ca7e2025b7f4d2ea3e18be2543e7ef41c15",
                          "typeString": "literal_string \"Can only mint with native token\""
                        },
                        "value": "Can only mint with native token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053e24a071e1c970f51b32991cc41ca7e2025b7f4d2ea3e18be2543e7ef41c15",
                          "typeString": "literal_string \"Can only mint with native token\""
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6556:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "6556:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 552,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "6645:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 553,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "6649:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 554,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "6654:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6663:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 556,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "6666:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 551,
                      "name": "_handleMintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "6628:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,uint256,bool)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6628:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6628:56:0"
                }
              ]
            },
            "documentation": {
              "id": 534,
              "nodeType": "StructuredDocumentation",
              "src": "6128:325:0",
              "text": "@notice This will mint multiple NFTS with different ids and amounts to an address using the payment token\n @param to the address to mint the NFTs to\n @param ids an array of the token IDs of the NFTs to be minted\n @param amounts an array of the amount of each corresponding NFT by tokenID to be minted"
            },
            "functionSelector": "d81d0a15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintBatch",
            "nameLocation": "6467:9:0",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6485:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "6477:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6477:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6506:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "6489:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 537,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6489:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 538,
                    "nodeType": "ArrayTypeName",
                    "src": "6489:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6528:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "6511:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6511:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 541,
                    "nodeType": "ArrayTypeName",
                    "src": "6511:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6476:60:0"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6546:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 587,
            "nodeType": "FunctionDefinition",
            "src": "7045:269:0",
            "nodes": [],
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "7156:158:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "7174:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c79206d696e74207769746820657263323020746f6b656e",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7193:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fc5938aa51faf6f09546d375250e7339e05aeb8dd67f885784fd022e3d48702",
                          "typeString": "literal_string \"Can only mint with erc20 token\""
                        },
                        "value": "Can only mint with erc20 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fc5938aa51faf6f09546d375250e7339e05aeb8dd67f885784fd022e3d48702",
                          "typeString": "literal_string \"Can only mint with erc20 token\""
                        }
                      ],
                      "id": 572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7166:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7166:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "7166:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "7260:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 579,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "7264:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 580,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "7269:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7278:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7282:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7278:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 583,
                        "name": "nativeMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "7289:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 577,
                      "name": "_handleMintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "7243:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,uint256,bool)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7243:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "7243:64:0"
                }
              ]
            },
            "documentation": {
              "id": 561,
              "nodeType": "StructuredDocumentation",
              "src": "6696:344:0",
              "text": "@notice This will mint multiple NFTS with different ids and amounts to an address using the network native token as payment\n @param to the address to mint the NFTs to\n @param ids an array of the token IDs of the NFTs to be minted\n @param amounts an array of the amount of each corresponding NFT by tokenID to be minted"
            },
            "functionSelector": "15f8a01a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintBatchWithNativeToken",
            "nameLocation": "7054:24:0",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7087:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "7079:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7079:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "7108:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "7091:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 564,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7091:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 565,
                    "nodeType": "ArrayTypeName",
                    "src": "7091:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "7130:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "7113:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7113:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 568,
                    "nodeType": "ArrayTypeName",
                    "src": "7113:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7078:60:0"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7156:0:0"
            },
            "scope": 888,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 604,
            "nodeType": "FunctionDefinition",
            "src": "7420:175:0",
            "nodes": [],
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "7553:42:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 600,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "7580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 598,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7570:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MitchMinter_$888_$",
                          "typeString": "type(contract super MitchMinter)"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7576:3:0",
                      "memberName": "uri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29838,
                      "src": "7570:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7570:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 597,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "7563:25:0"
                }
              ]
            },
            "baseFunctions": [
              28194,
              29838
            ],
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "7319:96:0",
              "text": "\n @param tokenId the token id of the NFT\n @return uri URI for a given token ID"
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "7429:3:0",
            "overrides": {
              "id": 594,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 592,
                  "name": "ERC1155Upgradeable",
                  "nameLocations": [
                    "7479:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29334,
                  "src": "7479:18:0"
                },
                {
                  "id": 593,
                  "name": "ERC1155URIStorageUpgradeable",
                  "nameLocations": [
                    "7499:28:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29877,
                  "src": "7499:28:0"
                }
              ],
              "src": "7470:58:0"
            },
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7441:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "7433:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7432:17:0"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "7538:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7537:15:0"
            },
            "scope": 888,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 629,
            "nodeType": "FunctionDefinition",
            "src": "7797:191:0",
            "nodes": [],
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "7890:98:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 616,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "7908:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7917:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7908:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742073657420707269636520746f2030",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7920:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a31ea1af09a5ccada2c6fd2811abb22cedd92263a7d64794ae3a688145efc1b",
                          "typeString": "literal_string \"cannot set price to 0\""
                        },
                        "value": "cannot set price to 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a31ea1af09a5ccada2c6fd2811abb22cedd92263a7d64794ae3a688145efc1b",
                          "typeString": "literal_string \"cannot set price to 0\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7900:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "7900:44:0"
                },
                {
                  "expression": {
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 622,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "7954:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 624,
                      "indexExpression": {
                        "id": 623,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7965:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7954:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 625,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "7976:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7954:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7954:27:0"
                }
              ]
            },
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "7601:191:0",
              "text": "@notice This will set the price of a specific NFT by its token ID, only callable by owner\n @param tokenId the token id of the NFT\n @param price the price of the NFT per unit"
            },
            "functionSelector": "eb685c47",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 612,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "7870:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 611,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7861:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "7861:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7861:28:0"
              }
            ],
            "name": "setTokenPrice",
            "nameLocation": "7806:13:0",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7828:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "7820:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "7845:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "7837:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7837:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7819:32:0"
            },
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7890:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 643,
            "nodeType": "FunctionDefinition",
            "src": "8150:115:0",
            "nodes": [],
            "body": {
              "id": 642,
              "nodeType": "Block",
              "src": "8228:37:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 638,
                      "name": "defaultPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "8238:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 639,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "8253:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8238:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:20:0"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "7994:151:0",
              "text": "@notice this will set the price of all NFTs that do not have a price set, only callable by owner\n @param price the price of the NFT per unit"
            },
            "functionSelector": "6d3c7ec5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 635,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "8208:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 636,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 634,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8199:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "8199:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8199:28:0"
              }
            ],
            "name": "setDefaultPrice",
            "nameLocation": "8159:15:0",
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "8183:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "8175:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8175:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8174:15:0"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8228:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 659,
            "nodeType": "FunctionDefinition",
            "src": "8457:120:0",
            "nodes": [],
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "8537:40:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 652,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8547:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "id": 653,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "8558:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8547:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8569:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8547:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "8547:23:0"
                }
              ]
            },
            "documentation": {
              "id": 644,
              "nodeType": "StructuredDocumentation",
              "src": "8271:181:0",
              "text": "@notice this will reset the price of an NFT that has been given a specific price back to the default price, only callable by owner\n @param tokenId the token id of the NFT"
            },
            "functionSelector": "fc5abac1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 649,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "8517:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 648,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8508:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "8508:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8508:28:0"
              }
            ],
            "name": "resetTokenPrice",
            "nameLocation": "8466:15:0",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8490:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "8482:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8481:17:0"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8537:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 674,
            "nodeType": "FunctionDefinition",
            "src": "8784:134:0",
            "nodes": [],
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "8871:47:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 669,
                      "name": "paymentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "8881:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$33476",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 670,
                      "name": "newPaymentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "8896:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$33476",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "8881:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$33476",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "8881:30:0"
                }
              ]
            },
            "documentation": {
              "id": 660,
              "nodeType": "StructuredDocumentation",
              "src": "8583:196:0",
              "text": "@notice this will change the address of the ERC20 compatible token used for payment of NFTs, only callable by owner\n @param newPaymentToken the address of the new ERC20 compatible token"
            },
            "functionSelector": "6a326ab1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 666,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "8851:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 665,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8842:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "8842:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8842:28:0"
              }
            ],
            "name": "setPaymentToken",
            "nameLocation": "8793:15:0",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "newPaymentToken",
                  "nameLocation": "8816:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "8809:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$33476",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 662,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 661,
                      "name": "IERC20",
                      "nameLocations": [
                        "8809:6:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33476,
                      "src": "8809:6:0"
                    },
                    "referencedDeclaration": 33476,
                    "src": "8809:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$33476",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8808:24:0"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8871:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 691,
            "nodeType": "FunctionDefinition",
            "src": "9112:143:0",
            "nodes": [],
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "9212:43:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "9230:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 687,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "9239:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 685,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29860,
                        28662
                      ],
                      "referencedDeclaration": 29860,
                      "src": "9222:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:26:0"
                }
              ]
            },
            "documentation": {
              "id": 675,
              "nodeType": "StructuredDocumentation",
              "src": "8924:183:0",
              "text": "@notice this will change the URI of a specific NFT by tokenID, only callable by owner\n @param tokenId the token id of the NFT\n @param tokenURI the new URI of the NFT"
            },
            "functionSelector": "162094c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 682,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "9192:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 683,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 681,
                  "name": "onlyRole",
                  "nameLocations": [
                    "9183:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "9183:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9183:28:0"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "9121:11:0",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9141:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "9133:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9133:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "9164:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "9150:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9150:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9132:41:0"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9212:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 704,
            "nodeType": "FunctionDefinition",
            "src": "9410:120:0",
            "nodes": [],
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "9492:38:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 700,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "9514:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 699,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29871,
                      "src": "9502:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9502:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "9502:21:0"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 696,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "9472:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 695,
                  "name": "onlyRole",
                  "nameLocations": [
                    "9463:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "9463:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9463:28:0"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "9419:10:0",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "9444:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "9430:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9430:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9429:24:0"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9492:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 734,
            "nodeType": "FunctionDefinition",
            "src": "9708:256:0",
            "nodes": [],
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "9807:157:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9817:14:0",
                    "subExpression": {
                      "id": 715,
                      "name": "uniqueTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "9817:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "uniqueTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "9849:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 720,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "9863:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 718,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29860,
                        28662
                      ],
                      "referencedDeclaration": 29860,
                      "src": "9841:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9841:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "9841:31:0"
                },
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "9890:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "9882:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 726,
                  "initialValue": {
                    "id": 725,
                    "name": "uniqueTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68,
                    "src": "9900:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9882:30:0"
                },
                {
                  "expression": {
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 727,
                        "name": "maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "9922:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 729,
                      "indexExpression": {
                        "id": 728,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "9937:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9922:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 730,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "9948:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9922:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "9922:35:0"
                }
              ]
            },
            "documentation": {
              "id": 705,
              "nodeType": "StructuredDocumentation",
              "src": "9536:167:0",
              "text": "@notice this will add a new token to the collection, starts with default price, only callable by owner\n @param tokenURI the URI of the new token to be added"
            },
            "functionSelector": "8ca132f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 712,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "9787:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 711,
                  "name": "onlyRole",
                  "nameLocations": [
                    "9778:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "9778:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9778:28:0"
              }
            ],
            "name": "addToken",
            "nameLocation": "9717:8:0",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "9740:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "9726:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9726:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "maxSupply",
                  "nameLocation": "9758:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "9750:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9750:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9725:43:0"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9807:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 764,
            "nodeType": "FunctionDefinition",
            "src": "10093:243:0",
            "nodes": [],
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "10157:179:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 742,
                      "mutability": "mutable",
                      "name": "tokenBalance",
                      "nameLocation": "10175:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 763,
                      "src": "10167:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10221:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MitchMinter_$888",
                              "typeString": "contract MitchMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MitchMinter_$888",
                              "typeString": "contract MitchMinter"
                            }
                          ],
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10213:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10213:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10213:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 743,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "10190:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$33476",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10203:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33433,
                      "src": "10190:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10190:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10167:60:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 751,
                      "name": "tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "10241:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10256:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10241:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 762,
                  "nodeType": "IfStatement",
                  "src": "10237:93:0",
                  "trueBody": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "10259:71:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 757,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "10299:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 758,
                              "name": "tokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "10306:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 754,
                              "name": "paymentToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "10273:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$33476",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10286:12:0",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34482,
                            "src": "10273:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$33476_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$33476_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10273:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "10273:46:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 735,
              "nodeType": "StructuredDocumentation",
              "src": "9970:118:0",
              "text": "@notice withdraws the whole balance of payment tokens in the contract to the owner address, only callable by owner"
            },
            "functionSelector": "8d8f2adb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 738,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "10137:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 739,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 737,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10128:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "10128:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10128:28:0"
              }
            ],
            "name": "withdrawTokens",
            "nameLocation": "10102:14:0",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10116:2:0"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10157:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 778,
            "nodeType": "FunctionDefinition",
            "src": "10570:127:0",
            "nodes": [],
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "10653:44:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 773,
                      "name": "nativeMintEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "10663:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 774,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "10683:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10663:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:27:0"
                }
              ]
            },
            "documentation": {
              "id": 765,
              "nodeType": "StructuredDocumentation",
              "src": "10342:223:0",
              "text": "@notice sets if the minter pays for NFTs with native tokens or the payment token, only callable by owner\n @param enabled true if the minter pays with native tokens, false if the minter pays with the payment token"
            },
            "functionSelector": "37210b8f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 770,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "10633:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 771,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 769,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10624:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "10624:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10624:28:0"
              }
            ],
            "name": "setNativeTokenMinting",
            "nameLocation": "10579:21:0",
            "parameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "10606:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "10601:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10601:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10600:14:0"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10653:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 807,
            "nodeType": "FunctionDefinition",
            "src": "10833:209:0",
            "nodes": [],
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "10910:132:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    786,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 786,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "10926:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 806,
                      "src": "10921:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 785,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 800,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10985:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 789,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "10943:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10935:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10935:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10935:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10950:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "10935:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 794,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10970:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MitchMinter_$888",
                                  "typeString": "contract MitchMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MitchMinter_$888",
                                  "typeString": "contract MitchMinter"
                                }
                              ],
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10962:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 792,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10962:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10962:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10976:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "10962:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "10935:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10935:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10920:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "11006:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11012:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10998:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10998:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "10998:37:0"
                }
              ]
            },
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "10703:125:0",
              "text": "@notice withdraws the whole balance of network native tokens in the contract to the owner address, only callable by owner"
            },
            "functionSelector": "5a18664c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 782,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27554,
                    "src": "10890:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 783,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 781,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10881:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27565,
                  "src": "10881:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10881:28:0"
              }
            ],
            "name": "withdrawNativeToken",
            "nameLocation": "10842:19:0",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10861:2:0"
            },
            "returnParameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10910:0:0"
            },
            "scope": 888,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 839,
            "nodeType": "FunctionDefinition",
            "src": "11133:228:0",
            "nodes": [],
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "11234:127:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 817,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "11244:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 819,
                        "indexExpression": {
                          "id": 818,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "11255:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11244:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11267:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11244:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 825,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "11294:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 826,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "11302:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 828,
                        "indexExpression": {
                          "id": 827,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "11313:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11302:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11294:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "11244:77:0",
                    "trueExpression": {
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 822,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "11271:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 823,
                        "name": "defaultPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "11279:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11271:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "11244:77:0"
                },
                {
                  "expression": {
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 832,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "11331:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 834,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "11346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 833,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          604
                        ],
                        "referencedDeclaration": 604,
                        "src": "11342:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256) view returns (string memory)"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11342:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11331:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "11331:23:0"
                }
              ]
            },
            "documentation": {
              "id": 808,
              "nodeType": "StructuredDocumentation",
              "src": "11048:80:0",
              "text": "@notice this will return the price and URI of a specific NFT by its token ID"
            },
            "functionSelector": "8c7a63ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenInfo",
            "nameLocation": "11142:12:0",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11163:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "11155:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11154:17:0"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "11203:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "11195:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11195:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "11224:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "11210:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11210:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11194:39:0"
            },
            "scope": 888,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 871,
            "nodeType": "FunctionDefinition",
            "src": "11366:342:0",
            "nodes": [],
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "11625:83:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 862,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "11662:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 863,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "11672:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 864,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "11678:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 865,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "11682:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 866,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "11687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 867,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "11696:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 859,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11635:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MitchMinter_$888_$",
                          "typeString": "type(contract super MitchMinter)"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11641:20:0",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29757,
                      "src": "11635:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11635:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "11635:66:0"
                }
              ]
            },
            "baseFunctions": [
              29153,
              29757
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11375:20:0",
            "overrides": {
              "id": 857,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 855,
                  "name": "ERC1155Upgradeable",
                  "nameLocations": [
                    "11579:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29334,
                  "src": "11579:18:0"
                },
                {
                  "id": 856,
                  "name": "ERC1155SupplyUpgradeable",
                  "nameLocations": [
                    "11599:24:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29763,
                  "src": "11599:24:0"
                }
              ],
              "src": "11570:54:0"
            },
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11413:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11405:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11439:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11431:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11431:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11461:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11453:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11490:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11473:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 846,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11473:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 847,
                    "nodeType": "ArrayTypeName",
                    "src": "11473:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11520:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11503:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 849,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 850,
                    "nodeType": "ArrayTypeName",
                    "src": "11503:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11550:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "11537:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11537:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11395:165:0"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11625:0:0"
            },
            "scope": 888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 887,
            "nodeType": "FunctionDefinition",
            "src": "11714:189:0",
            "nodes": [],
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "11851:52:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "11888:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 881,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11864:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MitchMinter_$888_$",
                          "typeString": "type(contract super MitchMinter)"
                        }
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11870:17:0",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27587,
                      "src": "11864:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11864:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "11857:43:0"
                }
              ]
            },
            "baseFunctions": [
              27587,
              28182
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "11723:17:0",
            "overrides": {
              "id": 877,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 875,
                  "name": "AccessControlUpgradeable",
                  "nameLocations": [
                    "11790:24:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27847,
                  "src": "11790:24:0"
                },
                {
                  "id": 876,
                  "name": "ERC1155Upgradeable",
                  "nameLocations": [
                    "11816:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29334,
                  "src": "11816:18:0"
                }
              ],
              "src": "11781:54:0"
            },
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "11748:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "11741:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11741:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11740:20:0"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "11845:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11845:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11844:6:0"
            },
            "scope": 888,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ERC1155BurnableUpgradeable",
              "nameLocations": [
                "900:26:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29586,
              "src": "900:26:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "900:26:0"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC1155URIStorageUpgradeable",
              "nameLocations": [
                "928:28:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29877,
              "src": "928:28:0"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "928:28:0"
          },
          {
            "baseName": {
              "id": 22,
              "name": "AccessControlUpgradeable",
              "nameLocations": [
                "958:24:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27847,
              "src": "958:24:0"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "958:24:0"
          },
          {
            "baseName": {
              "id": 24,
              "name": "ERC1155SupplyUpgradeable",
              "nameLocations": [
                "984:24:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29763,
              "src": "984:24:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "984:24:0"
          }
        ],
        "canonicalName": "MitchMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          888,
          29763,
          27847,
          29877,
          29586,
          29334,
          29892,
          29497,
          30537,
          30549,
          27920,
          30264,
          28089
        ],
        "name": "MitchMinter",
        "nameLocation": "885:11:0",
        "scope": 889,
        "usedErrors": [
          36
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}